{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/ActionButton/ActionButton.react.js\";\nimport Color from 'color';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"../utils\";\nimport Icon from \"../Icon\";\nimport IconToggle from \"../IconToggle\";\nimport RippleFeedback from \"../RippleFeedback\";\nimport getPlatformElevation from \"../styles/getPlatformElevation\";\nimport withTheme from \"../styles/withTheme\";\n\nfunction darkenOrLighten(color) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  var c = Color(color);\n  return c.luminosity() > 0.5 ? c.darken(ratio) : c.lighten(ratio);\n}\n\nvar propTypes = {\n  actions: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.element), PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    label: PropTypes.string,\n    name: PropTypes.string\n  }))]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  hidden: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  transition: PropTypes.oneOf(['toolbar', 'speedDial']),\n  rippleColor: PropTypes.string,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    icon: Text.propTypes.style\n  })\n};\nvar defaultProps = {\n  actions: null,\n  onPress: null,\n  onLongPress: null,\n  transition: null,\n  icon: 'add',\n  style: {},\n  hidden: false,\n  rippleColor: null\n};\n\nfunction getStyles(props, state) {\n  var size = props.size,\n      theme = props.theme;\n  var actionButton = theme.actionButton;\n  var local = {\n    container: {}\n  };\n\n  if (size) {\n    local.container = {\n      height: size,\n      width: size,\n      borderRadius: size / 2\n    };\n  }\n\n  local.container = _objectSpread({}, local.container, getPlatformElevation(state.elevation));\n  return {\n    positionContainer: [actionButton.positionContainer, local.positionContainer, props.style.positionContainer],\n    toolbarPositionContainer: [actionButton.toolbarPositionContainer, local.toolbarPositionContainer, props.style.toolbarPositionContainer],\n    container: [actionButton.container, local.container, props.style.container],\n    overlayContainer: [actionButton.overlayContainer, local.overlayContainer, props.style.overlayContainer],\n    toolbarContainer: [actionButton.toolbarContainer, local.toolbarContainer, props.style.toolbarContainer],\n    toolbarActionContainer: [actionButton.toolbarActionContainer, local.toolbarActionContainer, props.style.toolbarActionContainer],\n    speedDialContainer: [actionButton.speedDialContainer, local.speedDialContainer, props.style.speedDialContainer],\n    speedDialActionContainer: [actionButton.speedDialActionContainer, local.speedDialActionContainer, props.style.speedDialActionContainer],\n    speedDialActionLabel: [actionButton.speedDialActionLabel, local.speedDialActionLabel, props.style.speedDialActionLabel],\n    speedDialActionLabelContainer: [actionButton.speedDialActionLabelContainer, local.speedDialActionLabelContainer, props.style.speedDialActionLabelContainer],\n    speedDialActionIconContainer: [actionButton.speedDialActionIconContainer, local.speedDialActionIconContainer, props.style.speedDialActionIconContainer],\n    speedDialActionIcon: [actionButton.speedDialActionIcon, local.speedDialActionIcon, props.style.speedDialActionIcon],\n    icon: [actionButton.icon, local.icon, props.style.icon]\n  };\n}\n\nvar getRippleContainerStyle = function getRippleContainerStyle(containerStyle) {\n  var flattenContainer = StyleSheet.flatten(containerStyle);\n  var height = flattenContainer.height,\n      width = flattenContainer.width,\n      borderRadius = flattenContainer.borderRadius;\n  return {\n    container: {\n      height: height,\n      width: width,\n      borderRadius: borderRadius\n    }\n  };\n};\n\nvar ActionButton = function (_PureComponent) {\n  _inherits(ActionButton, _PureComponent);\n\n  function ActionButton(props) {\n    var _this;\n\n    _classCallCheck(this, ActionButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionButton).call(this, props));\n\n    _this.onPress = function (action) {\n      var onPress = _this.props.onPress;\n\n      _this.toggleState();\n\n      if (onPress) {\n        onPress(action);\n      }\n    };\n\n    _this.getActionItemKey = function (_ref) {\n      var icon = _ref.icon,\n          name = _ref.name;\n      var key = icon;\n\n      if (name) {\n        key = name;\n      } else if (React.isValidElement(icon) && icon.key) {\n        key = icon.key;\n      }\n\n      return key;\n    };\n\n    _this.toggleState = function () {\n      var transition = _this.props.transition;\n      var render = _this.state.render;\n\n      if (render === 'button') {\n        if (transition) {\n          _this.setState({\n            render: transition\n          });\n        }\n      } else {\n        _this.setState({\n          render: 'button'\n        });\n      }\n    };\n\n    _this.show = function () {};\n\n    _this.hide = function () {};\n\n    _this.renderToolbarTransition = function (styles) {\n      var actions = _this.props.actions;\n      return React.createElement(View, {\n        style: styles.toolbarPositionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      }, React.createElement(View, {\n        key: \"main-button\",\n        style: styles.toolbarContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        }\n      }, actions.map(function (action) {\n        if (typeof action === 'string') {\n          return _this.renderToolbarAction(styles, action);\n        }\n\n        if (React.isValidElement(action)) {\n          return _this.renderToolbarElementAction(styles, action);\n        }\n\n        var icon = action.icon,\n            label = action.label,\n            name = action.name;\n        return _this.renderToolbarLabelAction(styles, icon, label, name);\n      })));\n    };\n\n    _this.renderSpeedDialTransition = function (styles) {\n      var actions = _this.props.actions;\n      return React.createElement(View, {\n        style: [StyleSheet.absoluteFillObject, {\n          flex: 1\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: _this.toggleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        }\n      }, React.createElement(View, {\n        style: styles.overlayContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        }\n      }, React.createElement(View, {\n        style: [styles.positionContainer, styles.speedDialContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'flex-end',\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        }\n      }, actions.map(function (action) {\n        if (typeof action === 'string') {\n          return _this.renderAction(styles, action);\n        }\n\n        if (React.isValidElement(action)) {\n          return _this.renderElementAction(styles, action);\n        }\n\n        var icon = action.icon,\n            label = action.label,\n            name = action.name;\n        return _this.renderLabelAction(styles, icon, label, name);\n      })), _this.renderMainButton(styles)))));\n    };\n\n    _this.renderMainButton = function (styles) {\n      var _this$props = _this.props,\n          onLongPress = _this$props.onLongPress,\n          icon = _this$props.icon;\n      var render = _this.state.render;\n      var mainIcon = render !== 'button' ? 'clear' : icon;\n      return React.createElement(View, {\n        key: \"main-button\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        }\n      }, React.createElement(RippleFeedback, {\n        style: getRippleContainerStyle(styles.container),\n        color: _this.getRippleColor(),\n        onPress: function onPress() {\n          return _this.onPress('main-button');\n        },\n        onLongPress: onLongPress,\n        delayPressIn: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        }\n      }, _this.renderIconButton(styles, mainIcon)));\n    };\n\n    _this.renderToolbarAction = function (styles, icon, name) {\n      var content;\n\n      var key = _this.getActionItemKey({\n        icon: icon,\n        name: name\n      });\n\n      if (React.isValidElement(icon)) {\n        content = React.createElement(RippleFeedback, {\n          color: _this.getRippleColor(),\n          onPress: function onPress() {\n            return _this.onPress(key);\n          },\n          delayPressIn: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          }\n        }, _this.renderIconButton(styles, icon));\n      } else {\n        content = React.createElement(IconToggle, {\n          key: key,\n          name: key,\n          onPress: function onPress() {\n            return _this.onPress(key);\n          },\n          style: {\n            icon: styles.icon\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        key: key,\n        style: styles.toolbarActionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        }\n      }, content);\n    };\n\n    _this.renderToolbarElementAction = function (styles, icon) {\n      var key = _this.getActionItemKey({\n        icon: icon\n      });\n\n      return React.createElement(View, {\n        key: key,\n        style: styles.toolbarActionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        }\n      }, _this.renderToolbarAction(styles, icon));\n    };\n\n    _this.renderToolbarLabelAction = function (styles, icon, label, name) {\n      var key = _this.getActionItemKey({\n        icon: icon,\n        name: name\n      });\n\n      return React.createElement(View, {\n        key: key,\n        style: styles.toolbarActionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        }\n      }, _this.renderToolbarAction(styles, icon, name));\n    };\n\n    _this.renderAction = function (styles, icon, name) {\n      var key = _this.getActionItemKey({\n        icon: icon,\n        name: name\n      });\n\n      return React.createElement(View, {\n        key: key,\n        style: styles.speedDialActionIconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        }\n      }, React.createElement(View, {\n        style: styles.speedDialActionIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        }\n      }, React.createElement(RippleFeedback, {\n        style: getRippleContainerStyle(styles.speedDialActionIcon),\n        color: _this.getRippleColor(),\n        onPress: function onPress() {\n          return _this.onPress(key);\n        },\n        delayPressIn: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        }\n      }, _this.renderIconButton(styles, icon))));\n    };\n\n    _this.renderElementAction = function (styles, icon) {\n      var key = _this.getActionItemKey({\n        icon: icon\n      });\n\n      return React.createElement(View, {\n        key: key,\n        style: styles.speedDialActionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        }\n      }, _this.renderAction(styles, icon));\n    };\n\n    _this.renderLabelAction = function (styles, icon, label, name) {\n      var key = _this.getActionItemKey({\n        icon: icon,\n        name: name\n      });\n\n      return React.createElement(View, {\n        key: key,\n        style: styles.speedDialActionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        }\n      }, React.createElement(View, {\n        style: styles.speedDialActionLabelContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        }\n      }, React.createElement(Text, {\n        style: styles.speedDialActionLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        }\n      }, label)), _this.renderAction(styles, icon, name));\n    };\n\n    _this.renderIconButton = function (styles, icon) {\n      var result;\n\n      if (React.isValidElement(icon)) {\n        result = icon;\n      } else {\n        result = React.createElement(Icon, {\n          name: icon,\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        pointerEvents: \"box-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        }\n      }, result);\n    };\n\n    _this.renderButton = function (styles) {\n      return React.createElement(Animated.View, {\n        style: styles.positionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        }\n      }, _this.renderMainButton(styles));\n    };\n\n    _this.state = {\n      render: 'button'\n    };\n    return _this;\n  }\n\n  _createClass(ActionButton, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var hidden = this.props.hidden;\n\n      if (nextProps.hidden !== hidden) {\n        if (nextProps.hidden === true) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      var render = this.state.render;\n\n      if (render !== nextState.render) {\n        LayoutAnimation.easeInEaseOut();\n      }\n    }\n  }, {\n    key: \"getRippleColor\",\n    value: function getRippleColor() {\n      var rippleColor = this.props.rippleColor;\n\n      if (rippleColor) {\n        return rippleColor;\n      }\n\n      var styles = getStyles(this.props, this.state);\n\n      var _StyleSheet$flatten = StyleSheet.flatten(styles.container),\n          backgroundColor = _StyleSheet$flatten.backgroundColor;\n\n      return darkenOrLighten(backgroundColor).toString();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var render = this.state.render;\n      var styles = getStyles(this.props, this.state);\n\n      if (render === 'toolbar') {\n        return this.renderToolbarTransition(styles);\n      }\n\n      if (render === 'speedDial') {\n        return this.renderSpeedDialTransition(styles);\n      }\n\n      return this.renderButton(styles);\n    }\n  }]);\n\n  return ActionButton;\n}(PureComponent);\n\nActionButton.propTypes = propTypes;\nActionButton.defaultProps = defaultProps;\nexport default withTheme(ActionButton);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/ActionButton/ActionButton.react.js"],"names":["Color","React","PureComponent","PropTypes","ViewPropTypes","Icon","IconToggle","RippleFeedback","getPlatformElevation","withTheme","darkenOrLighten","color","ratio","c","luminosity","darken","lighten","propTypes","actions","oneOfType","arrayOf","string","element","shape","icon","label","name","onPress","func","onLongPress","hidden","bool","transition","oneOf","rippleColor","style","container","Text","defaultProps","getStyles","props","state","size","theme","actionButton","local","height","width","borderRadius","elevation","positionContainer","toolbarPositionContainer","overlayContainer","toolbarContainer","toolbarActionContainer","speedDialContainer","speedDialActionContainer","speedDialActionLabel","speedDialActionLabelContainer","speedDialActionIconContainer","speedDialActionIcon","getRippleContainerStyle","containerStyle","flattenContainer","StyleSheet","flatten","ActionButton","action","toggleState","getActionItemKey","key","isValidElement","render","setState","show","hide","renderToolbarTransition","styles","map","renderToolbarAction","renderToolbarElementAction","renderToolbarLabelAction","renderSpeedDialTransition","absoluteFillObject","flex","alignItems","marginBottom","renderAction","renderElementAction","renderLabelAction","renderMainButton","mainIcon","getRippleColor","renderIconButton","content","result","justifyContent","renderButton","nextProps","nextState","LayoutAnimation","easeInEaseOut","backgroundColor","toString"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport Color from 'color';\nimport React, { PureComponent } from 'react';\nimport {\n  View,\n  Text,\n  LayoutAnimation,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Animated,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from '../utils';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport Icon from '../Icon';\nimport IconToggle from '../IconToggle';\nimport RippleFeedback from '../RippleFeedback';\n/* eslint-disable import/no-unresolved, import/extensions */\nimport getPlatformElevation from '../styles/getPlatformElevation';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport withTheme from '../styles/withTheme';\n\nfunction darkenOrLighten(color, ratio = 0.5) {\n  const c = Color(color);\n  return c.luminosity() > 0.5 ? c.darken(ratio) : c.lighten(ratio);\n}\n\nconst propTypes = {\n  /**\n   * Array of names of icons (or elements) that will be shown after the main button is pressed\n   * Remember, you should specify key for each element, if you use array of elements\n   */\n  actions: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n        label: PropTypes.string,\n        name: PropTypes.string,\n      }),\n    ),\n  ]),\n  /**\n   * Called when button is pressed. Text is passed as param\n   */\n  onPress: PropTypes.func,\n  /**\n   * Called when button is long pressed. Text is passed as param\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Set true if you want to hide action button\n   */\n  hidden: PropTypes.bool,\n  /**\n   * If specified it'll be shown before text\n   */\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /**\n   * Leave it empty if you don't want any transition after press. Otherwise, it will be trnasform\n   * to another view - depends on transition value.\n   */\n  transition: PropTypes.oneOf(['toolbar', 'speedDial']),\n  /**\n   * Set ripple color\n   */\n  rippleColor: PropTypes.string,\n  /**\n   * You can overide any style for this button\n   */\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    icon: Text.propTypes.style, // eslint-disable-line\n  }),\n};\nconst defaultProps = {\n  actions: null,\n  onPress: null,\n  onLongPress: null,\n  transition: null,\n  icon: 'add',\n  style: {},\n  hidden: false,\n  rippleColor: null,\n};\n\nfunction getStyles(props, state) {\n  const { size, theme } = props;\n  const { actionButton } = theme;\n\n  const local = {\n    container: {},\n  };\n\n  if (size) {\n    local.container = {\n      height: size,\n      width: size,\n      borderRadius: size / 2,\n    };\n  }\n\n  local.container = {\n    ...local.container,\n    ...getPlatformElevation(state.elevation),\n  };\n\n  return {\n    positionContainer: [\n      actionButton.positionContainer,\n      local.positionContainer,\n      props.style.positionContainer,\n    ],\n    toolbarPositionContainer: [\n      actionButton.toolbarPositionContainer,\n      local.toolbarPositionContainer,\n      props.style.toolbarPositionContainer,\n    ],\n    container: [actionButton.container, local.container, props.style.container],\n    overlayContainer: [\n      actionButton.overlayContainer,\n      local.overlayContainer,\n      props.style.overlayContainer,\n    ],\n    toolbarContainer: [\n      actionButton.toolbarContainer,\n      local.toolbarContainer,\n      props.style.toolbarContainer,\n    ],\n    toolbarActionContainer: [\n      actionButton.toolbarActionContainer,\n      local.toolbarActionContainer,\n      props.style.toolbarActionContainer,\n    ],\n    speedDialContainer: [\n      actionButton.speedDialContainer,\n      local.speedDialContainer,\n      props.style.speedDialContainer,\n    ],\n    speedDialActionContainer: [\n      actionButton.speedDialActionContainer,\n      local.speedDialActionContainer,\n      props.style.speedDialActionContainer,\n    ],\n    speedDialActionLabel: [\n      actionButton.speedDialActionLabel,\n      local.speedDialActionLabel,\n      props.style.speedDialActionLabel,\n    ],\n    speedDialActionLabelContainer: [\n      actionButton.speedDialActionLabelContainer,\n      local.speedDialActionLabelContainer,\n      props.style.speedDialActionLabelContainer,\n    ],\n    speedDialActionIconContainer: [\n      actionButton.speedDialActionIconContainer,\n      local.speedDialActionIconContainer,\n      props.style.speedDialActionIconContainer,\n    ],\n    speedDialActionIcon: [\n      actionButton.speedDialActionIcon,\n      local.speedDialActionIcon,\n      props.style.speedDialActionIcon,\n    ],\n    icon: [actionButton.icon, local.icon, props.style.icon],\n  };\n}\n\nconst getRippleContainerStyle = containerStyle => {\n  const flattenContainer = StyleSheet.flatten(containerStyle);\n  const { height, width, borderRadius } = flattenContainer;\n\n  return { container: { height, width, borderRadius } };\n};\n\nclass ActionButton extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { render: 'button' };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { hidden } = this.props;\n\n    if (nextProps.hidden !== hidden) {\n      if (nextProps.hidden === true) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { render } = this.state;\n\n    if (render !== nextState.render) {\n      LayoutAnimation.easeInEaseOut();\n    }\n  }\n\n  onPress = action => {\n    const { onPress } = this.props;\n\n    this.toggleState();\n\n    if (onPress) {\n      onPress(action);\n    }\n  };\n\n  getActionItemKey = ({ icon, name }) => {\n    let key = icon;\n    if (name) {\n      key = name;\n    } else if (React.isValidElement(icon) && icon.key) {\n      key = icon.key; // eslint-disable-line\n    }\n    return key;\n  };\n\n  getRippleColor() {\n    const { rippleColor } = this.props;\n\n    if (rippleColor) {\n      return rippleColor;\n    }\n\n    const styles = getStyles(this.props, this.state);\n\n    const { backgroundColor } = StyleSheet.flatten(styles.container);\n\n    return darkenOrLighten(backgroundColor).toString();\n  }\n\n  toggleState = () => {\n    const { transition } = this.props;\n    const { render } = this.state;\n\n    if (render === 'button') {\n      if (transition) {\n        this.setState({ render: transition });\n      }\n    } else {\n      this.setState({ render: 'button' });\n    }\n  };\n\n  show = () => {\n    // Animated.timing(this.state.scaleValue, {\n    //     toValue: 1,\n    //     duration: 225,\n    //     easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n    //     useNativeDriver: true,\n    // }).start();\n  };\n\n  hide = () => {\n    // Animated.timing(this.state.scaleValue, {\n    //     // TODO: why is not 0 here?\n    //     // see: https://github.com/facebook/react-native/issues/10510\n    //     toValue: 0.01,\n    //     duration: 195,\n    //     easing: Easing.bezier(0.4, 0.0, 0.6, 1),\n    //     useNativeDriver: true,\n    // }).start();\n  };\n\n  renderToolbarTransition = styles => {\n    const { actions } = this.props;\n\n    return (\n      <View style={styles.toolbarPositionContainer}>\n        <View key=\"main-button\" style={styles.toolbarContainer}>\n          {actions.map(action => {\n            if (typeof action === 'string') {\n              return this.renderToolbarAction(styles, action);\n            }\n            if (React.isValidElement(action)) {\n              return this.renderToolbarElementAction(styles, action);\n            }\n\n            const { icon, label, name } = action;\n            // TODO: pass action\n            return this.renderToolbarLabelAction(styles, icon, label, name);\n          })}\n        </View>\n      </View>\n    );\n  };\n\n  renderSpeedDialTransition = styles => {\n    const { actions } = this.props;\n\n    return (\n      <View style={[StyleSheet.absoluteFillObject, { flex: 1 }]}>\n        <TouchableWithoutFeedback onPress={this.toggleState}>\n          <View style={styles.overlayContainer}>\n            <View style={[styles.positionContainer, styles.speedDialContainer]}>\n              <View\n                style={{\n                  alignItems: 'flex-end',\n                  marginBottom: 16,\n                }}\n              >\n                {actions.map(action => {\n                  if (typeof action === 'string') {\n                    return this.renderAction(styles, action);\n                  }\n\n                  if (React.isValidElement(action)) {\n                    return this.renderElementAction(styles, action);\n                  }\n\n                  const { icon, label, name } = action;\n                  // TODO: pass action\n                  return this.renderLabelAction(styles, icon, label, name);\n                })}\n              </View>\n              {this.renderMainButton(styles)}\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  };\n\n  renderMainButton = styles => {\n    const { onLongPress, icon } = this.props;\n    const { render } = this.state;\n\n    const mainIcon = render !== 'button' ? 'clear' : icon;\n\n    return (\n      <View key=\"main-button\" style={styles.container}>\n        <RippleFeedback\n          style={getRippleContainerStyle(styles.container)}\n          color={this.getRippleColor()}\n          onPress={() => this.onPress('main-button')}\n          onLongPress={onLongPress}\n          delayPressIn={20}\n        >\n          {this.renderIconButton(styles, mainIcon)}\n        </RippleFeedback>\n      </View>\n    );\n  };\n\n  renderToolbarAction = (styles, icon, name) => {\n    let content;\n    const key = this.getActionItemKey({ icon, name });\n\n    if (React.isValidElement(icon)) {\n      content = (\n        <RippleFeedback\n          color={this.getRippleColor()}\n          onPress={() => this.onPress(key)}\n          delayPressIn={20}\n        >\n          {this.renderIconButton(styles, icon)}\n        </RippleFeedback>\n      );\n    } else {\n      content = (\n        <IconToggle\n          key={key}\n          name={key}\n          onPress={() => this.onPress(key)}\n          style={{ icon: styles.icon }}\n        />\n      );\n    }\n    return (\n      <View key={key} style={styles.toolbarActionContainer}>\n        {content}\n      </View>\n    );\n  };\n\n  renderToolbarElementAction = (styles, icon) => {\n    const key = this.getActionItemKey({ icon });\n    return (\n      <View key={key} style={styles.toolbarActionContainer}>\n        {this.renderToolbarAction(styles, icon)}\n      </View>\n    );\n  };\n\n  /**\n   * TODO: implement labels for toolbar?\n   */\n  renderToolbarLabelAction = (styles, icon, label, name) => {\n    const key = this.getActionItemKey({ icon, name });\n    return (\n      <View key={key} style={styles.toolbarActionContainer}>\n        {this.renderToolbarAction(styles, icon, name)}\n      </View>\n    );\n  };\n\n  renderAction = (styles, icon, name) => {\n    const key = this.getActionItemKey({ icon, name });\n    return (\n      <View key={key} style={styles.speedDialActionIconContainer}>\n        <View style={styles.speedDialActionIcon}>\n          <RippleFeedback\n            style={getRippleContainerStyle(styles.speedDialActionIcon)}\n            color={this.getRippleColor()}\n            onPress={() => this.onPress(key)}\n            delayPressIn={20}\n          >\n            {this.renderIconButton(styles, icon)}\n          </RippleFeedback>\n        </View>\n      </View>\n    );\n  };\n\n  renderElementAction = (styles, icon) => {\n    const key = this.getActionItemKey({ icon });\n    return (\n      <View key={key} style={styles.speedDialActionContainer}>\n        {this.renderAction(styles, icon)}\n      </View>\n    );\n  };\n\n  renderLabelAction = (styles, icon, label, name) => {\n    const key = this.getActionItemKey({ icon, name });\n    return (\n      <View key={key} style={styles.speedDialActionContainer}>\n        <View style={styles.speedDialActionLabelContainer}>\n          <Text style={styles.speedDialActionLabel}>{label}</Text>\n        </View>\n        {this.renderAction(styles, icon, name)}\n      </View>\n    );\n  };\n\n  renderIconButton = (styles, icon) => {\n    let result;\n    if (React.isValidElement(icon)) {\n      result = icon;\n    } else {\n      result = <Icon name={icon} style={styles.icon} />;\n    }\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        pointerEvents=\"box-only\"\n      >\n        {result}\n      </View>\n    );\n  };\n\n  renderButton = styles => (\n    <Animated.View style={styles.positionContainer}>\n      {this.renderMainButton(styles)}\n    </Animated.View>\n  );\n\n  render() {\n    const { render } = this.state;\n\n    const styles = getStyles(this.props, this.state);\n\n    if (render === 'toolbar') {\n      return this.renderToolbarTransition(styles);\n    }\n    if (render === 'speedDial') {\n      return this.renderSpeedDialTransition(styles);\n    }\n\n    return this.renderButton(styles);\n  }\n}\n\nActionButton.propTypes = propTypes;\nActionButton.defaultProps = defaultProps;\n\nexport default withTheme(ActionButton);\n"]},"metadata":{},"sourceType":"module"}