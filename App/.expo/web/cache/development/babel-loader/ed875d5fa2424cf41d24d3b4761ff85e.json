{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Drawer/HeaderAccount.react.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ListItem from \"../ListItem\";\nimport { ViewPropTypes } from \"../utils\";\nimport withTheme from \"../styles/withTheme\";\nvar propTypes = {\n  avatar: PropTypes.element,\n  accounts: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.element,\n    onPress: PropTypes.func\n  })),\n  footer: PropTypes.shape(ListItem.propTypes),\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    accountContainer: ViewPropTypes.style,\n    topContainer: ViewPropTypes.style,\n    avatarsContainer: ViewPropTypes.style,\n    activeAvatarContainer: ViewPropTypes.style,\n    inactiveAvatarContainer: ViewPropTypes.style\n  }),\n  theme: PropTypes.any\n};\nvar defaultProps = {\n  avatar: null,\n  accounts: null,\n  footer: null,\n  style: {}\n};\n\nfunction getStyles(props) {\n  var drawerHeaderAccount = props.theme.drawerHeaderAccount;\n  return {\n    container: [drawerHeaderAccount.container, props.style.container],\n    accountContainer: [drawerHeaderAccount.accountContainer, props.style.accountContainer],\n    topContainer: [drawerHeaderAccount.topContainer, props.style.topContainer],\n    avatarsContainer: [drawerHeaderAccount.avatarsContainer, props.style.avatarsContainer],\n    activeAvatarContainer: [drawerHeaderAccount.activeAvatarContainer, props.style.activeAvatarContainer],\n    inactiveAvatarContainer: [drawerHeaderAccount.inactiveAvatarContainer, props.style.inactiveAvatarContainer]\n  };\n}\n\nvar HeaderAcount = function (_PureComponent) {\n  _inherits(HeaderAcount, _PureComponent);\n\n  function HeaderAcount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeaderAcount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeaderAcount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentWillMount = function () {\n      _this.setState({\n        styles: getStyles(_this.props)\n      });\n    };\n\n    _this.renderFooter = function () {\n      var _this$props = _this.props,\n          footer = _this$props.footer,\n          theme = _this$props.theme;\n\n      if (!footer) {\n        return null;\n      }\n\n      var props = _objectSpread({}, footer, {\n        style: theme.drawerHeaderListItem\n      });\n\n      return React.createElement(ListItem, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }));\n    };\n\n    _this.renderAccount = function (account) {\n      var styles = _this.state.styles;\n      return React.createElement(TouchableWithoutFeedback, {\n        key: account.key,\n        onPress: account.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, React.createElement(View, {\n        style: [styles.inactiveAvatarContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, account.avatar));\n    };\n\n    _this.renderAccounts = function () {\n      var accounts = _this.props.accounts;\n\n      if (!accounts) {\n        return null;\n      }\n\n      return accounts.slice(0, 3).map(_this.renderAccount);\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderAcount, [{\n    key: \"render\",\n    value: function render() {\n      var avatar = this.props.avatar;\n      var styles = this.state.styles;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, React.createElement(View, {\n        style: [styles.accountContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      }, React.createElement(View, {\n        style: [styles.topContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, React.createElement(View, {\n        style: [styles.avatarsContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, React.createElement(View, {\n        style: [styles.activeAvatarContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }, React.cloneElement(avatar, {\n        size: 56\n      })), this.renderAccounts()))), this.renderFooter());\n    }\n  }]);\n\n  return HeaderAcount;\n}(PureComponent);\n\nHeaderAcount.propTypes = propTypes;\nHeaderAcount.defaultProps = defaultProps;\nexport default withTheme(HeaderAcount);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Drawer/HeaderAccount.react.js"],"names":["React","PureComponent","PropTypes","ListItem","ViewPropTypes","withTheme","propTypes","avatar","element","accounts","arrayOf","shape","onPress","func","footer","style","container","accountContainer","topContainer","avatarsContainer","activeAvatarContainer","inactiveAvatarContainer","theme","any","defaultProps","getStyles","props","drawerHeaderAccount","HeaderAcount","componentWillMount","setState","styles","renderFooter","drawerHeaderListItem","renderAccount","account","state","key","renderAccounts","slice","map","cloneElement","size"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, TouchableWithoutFeedback } from 'react-native';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport ListItem from '../ListItem';\nimport { ViewPropTypes } from '../utils';\nimport withTheme from '../styles/withTheme';\n\nconst propTypes = {\n  avatar: PropTypes.element,\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.element,\n      onPress: PropTypes.func,\n    }),\n  ),\n  footer: PropTypes.shape(ListItem.propTypes), // eslint-disable-line\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    accountContainer: ViewPropTypes.style,\n    topContainer: ViewPropTypes.style,\n    avatarsContainer: ViewPropTypes.style,\n    activeAvatarContainer: ViewPropTypes.style,\n    inactiveAvatarContainer: ViewPropTypes.style,\n  }),\n  /**\n   * Theme\n   */\n  theme: PropTypes.any, // eslint-disable-line\n};\nconst defaultProps = {\n  avatar: null,\n  accounts: null,\n  footer: null,\n  style: {},\n};\n\nfunction getStyles(props) {\n  const { drawerHeaderAccount } = props.theme;\n\n  return {\n    container: [drawerHeaderAccount.container, props.style.container],\n    accountContainer: [\n      drawerHeaderAccount.accountContainer,\n      props.style.accountContainer,\n    ],\n    topContainer: [drawerHeaderAccount.topContainer, props.style.topContainer],\n    avatarsContainer: [\n      drawerHeaderAccount.avatarsContainer,\n      props.style.avatarsContainer,\n    ],\n    activeAvatarContainer: [\n      drawerHeaderAccount.activeAvatarContainer,\n      props.style.activeAvatarContainer,\n    ],\n    inactiveAvatarContainer: [\n      drawerHeaderAccount.inactiveAvatarContainer,\n      props.style.inactiveAvatarContainer,\n    ],\n  };\n}\n\nclass HeaderAcount extends PureComponent {\n  componentWillMount = () => {\n    // We need to change state if relevant props are changed\n    this.setState({\n      styles: getStyles(this.props),\n    });\n  };\n\n  renderFooter = () => {\n    const { footer, theme } = this.props;\n\n    if (!footer) {\n      return null;\n    }\n\n    const props = {\n      ...footer,\n      style: theme.drawerHeaderListItem,\n    };\n\n    return <ListItem {...props} />;\n  };\n\n  renderAccount = account => {\n    const { styles } = this.state;\n\n    // invariant(account.key, 'Please provide key prop to account object in accounts array.');\n\n    return (\n      <TouchableWithoutFeedback key={account.key} onPress={account.onPress}>\n        <View style={[styles.inactiveAvatarContainer]}>{account.avatar}</View>\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  renderAccounts = () => {\n    const { accounts } = this.props;\n\n    if (!accounts) {\n      return null;\n    }\n\n    // TODO: slice of accounts\n    // add more soficticated slice when there will be lots of accounts\n    return accounts.slice(0, 3).map(this.renderAccount);\n  };\n\n  render() {\n    const { avatar } = this.props;\n    const { styles } = this.state;\n\n    return (\n      <View style={styles.container}>\n        <View style={[styles.accountContainer]}>\n          <View style={[styles.topContainer]}>\n            <View style={[styles.avatarsContainer]}>\n              <View style={[styles.activeAvatarContainer]}>\n                {React.cloneElement(avatar, { size: 56 })}\n              </View>\n              {this.renderAccounts()}\n            </View>\n          </View>\n        </View>\n        {this.renderFooter()}\n      </View>\n    );\n  }\n}\n\nHeaderAcount.propTypes = propTypes;\nHeaderAcount.defaultProps = defaultProps;\n\nexport default withTheme(HeaderAcount);\n"]},"metadata":{},"sourceType":"module"}