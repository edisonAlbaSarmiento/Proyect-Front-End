{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Snackbar/Snackbar.react.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"../utils\";\nimport withTheme from \"../styles/withTheme\";\nimport Button from \"../Button\";\nvar propTypes = {\n  message: PropTypes.string.isRequired,\n  visible: PropTypes.bool,\n  timeout: PropTypes.number,\n  onRequestClose: PropTypes.func.isRequired,\n  bottomNavigation: PropTypes.bool,\n  onActionPress: PropTypes.func,\n  actionText: PropTypes.string,\n  button: PropTypes.shape(_objectSpread({}, Button.propTypes, {\n    text: PropTypes.string\n  })),\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    message: ViewPropTypes.style\n  }),\n  onHeightChange: PropTypes.func,\n  onPress: PropTypes.func,\n  theme: PropTypes.any\n};\nvar defaultProps = {\n  onActionPress: null,\n  actionText: null,\n  visible: false,\n  timeout: 2750,\n  bottomNavigation: false,\n  style: {},\n  button: {},\n  onHeightChange: null,\n  onPress: null\n};\n\nfunction getStyles(props) {\n  var snackbar = props.theme.snackbar;\n  var local = {};\n  return {\n    container: [snackbar.container, local.container, props.style.container],\n    content: [snackbar.content, local.content, props.style.content],\n    message: [snackbar.message, local.message, props.style.message]\n  };\n}\n\nvar Snackbar = function (_PureComponent) {\n  _inherits(Snackbar, _PureComponent);\n\n  function Snackbar(props, context) {\n    var _this;\n\n    _classCallCheck(this, Snackbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snackbar).call(this, props, context));\n\n    _this.move = function (bottomNavigation) {\n      var theme = _this.props.theme;\n      var container = theme.bottomNavigation.container;\n      var toValue = bottomNavigation ? StyleSheet.flatten(container).height : 0;\n\n      _this.setState({\n        bottomPosition: toValue\n      });\n    };\n\n    _this.renderAction = function () {\n      var _this$props = _this.props,\n          button = _this$props.button,\n          actionText = _this$props.actionText,\n          onActionPress = _this$props.onActionPress,\n          theme = _this$props.theme;\n      var snackbar = theme.snackbar;\n      var styles = {};\n\n      if (actionText && typeof onActionPress === 'function') {\n        styles.container = snackbar.actionContainer;\n        styles.text = snackbar.actionText;\n\n        if (button !== 'undefined' && 'style' in button) {\n          if ('container' in button.style) {\n            styles.container = _objectSpread({}, StyleSheet.flatten(snackbar.actionContainer), button.style.container);\n          }\n\n          if ('text' in button.style) {\n            styles.text = _objectSpread({}, StyleSheet.flatten(snackbar.actionText), button.style.text);\n          }\n        }\n\n        return React.createElement(Button, _extends({}, button, {\n          style: styles,\n          text: actionText,\n          onPress: onActionPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          }\n        }));\n      }\n\n      return null;\n    };\n\n    _this.onTextLayout = _this.onTextLayout.bind(_assertThisInitialized(_this));\n\n    var _styles = getStyles(props, context);\n\n    _this.state = {\n      bottomPosition: 0,\n      styles: _styles,\n      visible: props.visible\n    };\n    return _this;\n  }\n\n  _createClass(Snackbar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var visible = this.props.visible;\n      this.visibility = new Animated.Value(visible ? 1 : 0);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          visible = _this$props2.visible,\n          bottomNavigation = _this$props2.bottomNavigation;\n\n      if (nextProps.style !== style) {\n        this.setState({\n          styles: getStyles(this.props, this.context)\n        });\n      }\n\n      if (nextProps.visible !== visible) {\n        if (nextProps.visible) {\n          this.setState({\n            visible: true\n          });\n          this.setHideTimer(nextProps);\n        }\n\n        Animated.timing(this.visibility, {\n          toValue: nextProps.visible ? 1 : 0,\n          duration: 300\n        }).start(function () {\n          _this2.setState({\n            visible: nextProps.visible\n          });\n        });\n      }\n\n      if (nextProps.bottomNavigation !== bottomNavigation) {\n        this.move(nextProps.bottomNavigation);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.hideTimer);\n    }\n  }, {\n    key: \"onTextLayout\",\n    value: function onTextLayout(_ref) {\n      var height = _ref.nativeEvent.layout.height;\n      var _this$props3 = this.props,\n          message = _this$props3.message,\n          onHeightChange = _this$props3.onHeightChange;\n      var styles = this.state.styles;\n\n      if (message && onHeightChange) {\n        onHeightChange(height + StyleSheet.flatten(styles.message).marginVertical * 2);\n      }\n    }\n  }, {\n    key: \"setHideTimer\",\n    value: function setHideTimer(props) {\n      var timeout = props.timeout,\n          onRequestClose = props.onRequestClose;\n\n      if (timeout > 0) {\n        clearTimeout(this.hideTimer);\n        this.hideTimer = setTimeout(function () {\n          onRequestClose();\n        }, timeout);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          message = _this$props4.message,\n          onPress = _this$props4.onPress;\n      var _this$state = this.state,\n          styles = _this$state.styles,\n          bottomPosition = _this$state.bottomPosition,\n          visible = _this$state.visible;\n      var containerStyle = {\n        opacity: this.visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1]\n        })\n      };\n      var combinedStyle = [containerStyle, styles.container, {\n        bottom: bottomPosition\n      }];\n      return React.createElement(Animated.View, {\n        style: visible ? combinedStyle : containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        }\n      }, React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }, React.createElement(Text, {\n        style: styles.message,\n        onLayout: this.onTextLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      }, message), this.renderAction())));\n    }\n  }]);\n\n  return Snackbar;\n}(PureComponent);\n\nSnackbar.propTypes = propTypes;\nSnackbar.defaultProps = defaultProps;\nexport default withTheme(Snackbar);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Snackbar/Snackbar.react.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","withTheme","Button","propTypes","message","string","isRequired","visible","bool","timeout","number","onRequestClose","func","bottomNavigation","onActionPress","actionText","button","shape","text","style","container","onHeightChange","onPress","theme","any","defaultProps","getStyles","props","snackbar","local","content","Snackbar","context","move","toValue","StyleSheet","flatten","height","setState","bottomPosition","renderAction","styles","actionContainer","onTextLayout","bind","state","visibility","Animated","Value","nextProps","setHideTimer","timing","duration","start","clearTimeout","hideTimer","nativeEvent","layout","marginVertical","setTimeout","containerStyle","opacity","interpolate","inputRange","outputRange","combinedStyle","bottom"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  Animated,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { ViewPropTypes } from '../utils';\nimport withTheme from '../styles/withTheme';\n\nimport Button from '../Button';\n\nconst propTypes = {\n  /**\n   * The text message to display.\n   */\n  message: PropTypes.string.isRequired,\n  /**\n   * Whether or not the snackbar is visible.\n   */\n  visible: PropTypes.bool,\n  /**\n   * The amount of time in milliseconds to show the snackbar.\n   */\n  timeout: PropTypes.number,\n  /**\n   * Callback for when the timeout finishes.\n   */\n  onRequestClose: PropTypes.func.isRequired,\n  /**\n   * Whether or not there is a bottom navigation on the screen.\n   */\n  bottomNavigation: PropTypes.bool,\n  /**\n   * The function to execute when the action is clicked.\n   */\n  onActionPress: PropTypes.func,\n  /**\n   * The function to execute when the action is clicked.\n   */\n  actionText: PropTypes.string,\n  /**\n   * Take a look at the Button component for more details.\n   */\n  button: PropTypes.shape({\n    ...Button.propTypes, // eslint-disable-line\n    text: PropTypes.string,\n  }),\n  /**\n   * Inline style of snackbar\n   */\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    message: ViewPropTypes.style,\n  }),\n  /**\n   * The function to execute when the snackbar's height changes.\n   */\n  onHeightChange: PropTypes.func,\n  /**\n   * Callback for when the snackbar is pressed.\n   */\n  onPress: PropTypes.func,\n  /**\n   * Theme\n   */\n  theme: PropTypes.any, // eslint-disable-line\n};\nconst defaultProps = {\n  onActionPress: null,\n  actionText: null,\n  visible: false,\n  timeout: 2750,\n  bottomNavigation: false,\n  style: {},\n  button: {},\n  onHeightChange: null,\n  onPress: null,\n};\n\nfunction getStyles(props) {\n  const { snackbar } = props.theme;\n  const local = {};\n\n  return {\n    container: [snackbar.container, local.container, props.style.container],\n    content: [snackbar.content, local.content, props.style.content],\n    message: [snackbar.message, local.message, props.style.message],\n  };\n}\n\n/**\n * Component for snackbars\n * https://material.io/guidelines/components/snackbars-toasts.html\n */\nclass Snackbar extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onTextLayout = this.onTextLayout.bind(this);\n\n    const styles = getStyles(props, context);\n\n    this.state = {\n      bottomPosition: 0,\n      styles,\n      visible: props.visible,\n    };\n  }\n\n  componentWillMount() {\n    const { visible } = this.props;\n\n    this.visibility = new Animated.Value(visible ? 1 : 0);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { style, visible, bottomNavigation } = this.props;\n\n    if (nextProps.style !== style) {\n      this.setState({ styles: getStyles(this.props, this.context) });\n    }\n\n    if (nextProps.visible !== visible) {\n      if (nextProps.visible) {\n        this.setState({ visible: true });\n        this.setHideTimer(nextProps);\n      }\n\n      Animated.timing(this.visibility, {\n        toValue: nextProps.visible ? 1 : 0,\n        duration: 300,\n      }).start(() => {\n        this.setState({ visible: nextProps.visible });\n      });\n    }\n\n    if (nextProps.bottomNavigation !== bottomNavigation) {\n      this.move(nextProps.bottomNavigation);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.hideTimer);\n  }\n\n  onTextLayout({\n    nativeEvent: {\n      layout: { height },\n    },\n  }) {\n    const { message, onHeightChange } = this.props;\n    const { styles } = this.state;\n\n    if (message && onHeightChange) {\n      onHeightChange(\n        height + StyleSheet.flatten(styles.message).marginVertical * 2,\n      );\n    }\n  }\n\n  setHideTimer(props) {\n    const { timeout, onRequestClose } = props;\n\n    if (timeout > 0) {\n      clearTimeout(this.hideTimer);\n      this.hideTimer = setTimeout(() => {\n        onRequestClose();\n      }, timeout);\n    }\n  }\n\n  move = bottomNavigation => {\n    const { theme } = this.props;\n    const { container } = theme.bottomNavigation;\n\n    const toValue = bottomNavigation ? StyleSheet.flatten(container).height : 0;\n\n    this.setState({ bottomPosition: toValue });\n  };\n\n  renderAction = () => {\n    const { button, actionText, onActionPress, theme } = this.props;\n    const { snackbar } = theme;\n    const styles = {};\n\n    if (actionText && typeof onActionPress === 'function') {\n      styles.container = snackbar.actionContainer;\n      styles.text = snackbar.actionText;\n\n      if (button !== 'undefined' && 'style' in button) {\n        if ('container' in button.style) {\n          styles.container = {\n            ...StyleSheet.flatten(snackbar.actionContainer),\n            ...button.style.container,\n          };\n        }\n        if ('text' in button.style) {\n          styles.text = {\n            ...StyleSheet.flatten(snackbar.actionText),\n            ...button.style.text,\n          };\n        }\n      }\n\n      return (\n        <Button\n          {...button}\n          style={styles}\n          text={actionText}\n          onPress={onActionPress}\n        />\n      );\n    }\n    return null;\n  };\n\n  render() {\n    const { message, onPress } = this.props;\n    const { styles, bottomPosition, visible } = this.state;\n\n    const containerStyle = {\n      opacity: this.visibility.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 1],\n      }),\n    };\n\n    const combinedStyle = [\n      containerStyle,\n      styles.container,\n      { bottom: bottomPosition },\n    ];\n\n    return (\n      <Animated.View style={visible ? combinedStyle : containerStyle}>\n        <TouchableWithoutFeedback onPress={onPress}>\n          <View style={styles.content}>\n            <Text style={styles.message} onLayout={this.onTextLayout}>\n              {message}\n            </Text>\n            {this.renderAction()}\n          </View>\n        </TouchableWithoutFeedback>\n      </Animated.View>\n    );\n  }\n}\n\nSnackbar.propTypes = propTypes;\nSnackbar.defaultProps = defaultProps;\n\nexport default withTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}