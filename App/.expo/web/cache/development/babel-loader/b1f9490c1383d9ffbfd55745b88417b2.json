{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-navigation/src/views/Header/HeaderBackButton.js\";\nimport React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableItem from \"../TouchableItem\";\n\nvar defaultBackImage = require(\"../assets/back-icon.png\");\n\nvar HeaderBackButton = function (_React$PureComponent) {\n  _inherits(HeaderBackButton, _React$PureComponent);\n\n  function HeaderBackButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeaderBackButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeaderBackButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this._onTextLayout = function (e) {\n      if (_this.state.initialTextWidth) {\n        return;\n      }\n\n      _this.setState({\n        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderBackButton, [{\n    key: \"_renderBackImage\",\n    value: function _renderBackImage() {\n      var _this$props = this.props,\n          backImage = _this$props.backImage,\n          title = _this$props.title,\n          tintColor = _this$props.tintColor;\n      var BackImage;\n      var props;\n\n      if (React.isValidElement(backImage)) {\n        return backImage;\n      } else if (backImage) {\n        BackImage = backImage;\n        props = {\n          tintColor: tintColor,\n          title: title\n        };\n      } else {\n        BackImage = Image;\n        props = {\n          style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && {\n            tintColor: tintColor\n          }],\n          source: defaultBackImage\n        };\n      }\n\n      return React.createElement(BackImage, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onPress = _this$props2.onPress,\n          pressColorAndroid = _this$props2.pressColorAndroid,\n          width = _this$props2.width,\n          title = _this$props2.title,\n          titleStyle = _this$props2.titleStyle,\n          tintColor = _this$props2.tintColor,\n          truncatedTitle = _this$props2.truncatedTitle;\n      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;\n      var backButtonTitle = renderTruncated ? truncatedTitle : title;\n      return React.createElement(TouchableItem, {\n        accessibilityComponentType: \"button\",\n        accessibilityLabel: backButtonTitle,\n        accessibilityTraits: \"button\",\n        testID: \"header-back\",\n        delayPressIn: 0,\n        onPress: onPress,\n        pressColor: pressColorAndroid,\n        style: styles.container,\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, this._renderBackImage(), Platform.OS === 'ios' && typeof backButtonTitle === 'string' && React.createElement(Text, {\n        onLayout: this._onTextLayout,\n        style: [styles.title, !!tintColor && {\n          color: tintColor\n        }, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, backButtonTitle)));\n    }\n  }]);\n\n  return HeaderBackButton;\n}(React.PureComponent);\n\nHeaderBackButton.defaultProps = {\n  pressColorAndroid: 'rgba(0, 0, 0, .32)',\n  tintColor: Platform.select({\n    ios: '#037aff'\n  }),\n  truncatedTitle: 'Back'\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent'\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10\n  },\n  icon: Platform.OS === 'ios' ? {\n    height: 21,\n    width: 13,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  } : {\n    height: 24,\n    width: 24,\n    margin: 16,\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  iconWithTitle: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {}\n});\nexport default HeaderBackButton;","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-navigation/src/views/Header/HeaderBackButton.js"],"names":["React","TouchableItem","defaultBackImage","require","HeaderBackButton","state","_onTextLayout","e","initialTextWidth","setState","nativeEvent","layout","x","width","props","backImage","title","tintColor","BackImage","isValidElement","Image","style","styles","icon","iconWithTitle","source","onPress","pressColorAndroid","titleStyle","truncatedTitle","renderTruncated","backButtonTitle","container","_renderBackImage","Platform","OS","color","PureComponent","defaultProps","select","ios","StyleSheet","create","alignItems","flexDirection","backgroundColor","fontSize","paddingRight","height","marginLeft","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","isRTL","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  I18nManager,\n  Image,\n  Text,\n  View,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nconst defaultBackImage = require('../assets/back-icon.png');\n\nclass HeaderBackButton extends React.PureComponent {\n  static defaultProps = {\n    pressColorAndroid: 'rgba(0, 0, 0, .32)',\n    tintColor: Platform.select({\n      ios: '#037aff',\n    }),\n    truncatedTitle: 'Back',\n  };\n\n  state = {};\n\n  _onTextLayout = e => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  _renderBackImage() {\n    const { backImage, title, tintColor } = this.props;\n\n    let BackImage;\n    let props;\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      BackImage = backImage;\n      props = {\n        tintColor,\n        title,\n      };\n    } else {\n      BackImage = Image;\n      props = {\n        style: [\n          styles.icon,\n          !!title && styles.iconWithTitle,\n          !!tintColor && { tintColor },\n        ],\n        source: defaultBackImage,\n      };\n    }\n\n    return <BackImage {...props} />;\n  }\n\n  render() {\n    const {\n      onPress,\n      pressColorAndroid,\n      width,\n      title,\n      titleStyle,\n      tintColor,\n      truncatedTitle,\n    } = this.props;\n\n    const renderTruncated =\n      this.state.initialTextWidth && width\n        ? this.state.initialTextWidth > width\n        : false;\n\n    const backButtonTitle = renderTruncated ? truncatedTitle : title;\n\n    return (\n      <TouchableItem\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={backButtonTitle}\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={onPress}\n        pressColor={pressColorAndroid}\n        style={styles.container}\n        borderless\n      >\n        <View style={styles.container}>\n          {this._renderBackImage()}\n          {Platform.OS === 'ios' &&\n            typeof backButtonTitle === 'string' && (\n              <Text\n                onLayout={this._onTextLayout}\n                style={[\n                  styles.title,\n                  !!tintColor && { color: tintColor },\n                  titleStyle,\n                ]}\n                numberOfLines={1}\n              >\n                {backButtonTitle}\n              </Text>\n            )}\n        </View>\n      </TouchableItem>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10,\n  },\n  icon:\n    Platform.OS === 'ios'\n      ? {\n          height: 21,\n          width: 13,\n          marginLeft: 9,\n          marginRight: 22,\n          marginVertical: 12,\n          resizeMode: 'contain',\n          transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n        }\n      : {\n          height: 24,\n          width: 24,\n          margin: 16,\n          resizeMode: 'contain',\n          transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n        },\n  iconWithTitle:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n});\n\nexport default HeaderBackButton;\n"]},"metadata":{},"sourceType":"module"}