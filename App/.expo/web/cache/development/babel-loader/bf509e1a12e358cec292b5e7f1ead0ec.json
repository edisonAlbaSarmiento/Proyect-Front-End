{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/src/screens/Events.js\";\nimport React, { Component } from 'react';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { Header, Icon, Left, Card, CardItem, Thumbnail, Body, Button, Right, Footer, FooterTab, Badge } from 'native-base';\nimport HeaderEntry from \"../Components/Header\";\nimport moment from 'moment';\nimport urlApi from \"../../ConstIP\";\n\nvar Toast = function Toast(props) {\n  if (props.visible) {\n    ToastAndroid.showWithGravityAndOffset(props.message, ToastAndroid.LONG, ToastAndroid.CENTER, 25, 50);\n    return null;\n  }\n\n  return null;\n};\n\nvar Events = function (_Component) {\n  _inherits(Events, _Component);\n\n  function Events(props) {\n    var _this;\n\n    _classCallCheck(this, Events);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Events).call(this, props));\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", fetch(urlApi + \"/events/\", {\n                method: 'GET',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                console.log('responseJson', responseJson);\n\n                _this.setState({\n                  isLoading: false,\n                  data: responseJson.reverse()\n                });\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this._onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      fetch(urlApi + \"/events/\", {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log('responseJson', responseJson);\n\n        _this.setState({\n          isLoading: false,\n          data: responseJson.reverse()\n        });\n      }).then(function () {\n        _this.setState({\n          refreshing: false\n        });\n      });\n    };\n\n    _this.state = {\n      data: [],\n      isLoading: true,\n      refreshing: false\n    };\n    return _this;\n  }\n\n  _createClass(Events, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      var dataNew = data.filter(function (data) {\n        return data.status === 0;\n      });\n\n      if (isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            padding: 50\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, React.createElement(HeaderEntry, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }), React.createElement(Header, {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: '#0F385A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(Icon, {\n        name: \"menu\",\n        style: {\n          color: 'white'\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.openDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, \" Eventos \"))), React.createElement(ScrollView, {\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this._onRefresh,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      }, data.map(function (item, i) {\n        return React.createElement(View, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          }\n        }, React.createElement(Card, {\n          style: {\n            flex: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          }\n        }, React.createElement(CardItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          }\n        }, React.createElement(Left, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          }\n        }, React.createElement(Thumbnail, {\n          source: require(\"../../assets/logoPoli.png\"),\n          style: {\n            resizeMode: 'contain'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          }\n        }), React.createElement(Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          }\n        }, item.status === 0 ? React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          }\n        }, \"Nuevo Evento \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }, item.name), React.createElement(Toast, {\n          visible: true,\n          message: \"EVENTOS NUEVOS\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        })) : React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        }, item.name), React.createElement(Text, {\n          note: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, moment(item.created_at).format(\"YYYY-MM-DD\"))))), React.createElement(CardItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, React.createElement(Body, {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: item.imagenUrl !== \"\" ? item.imagenUrl : 'https://www.poli.edu.co/sites/default/files/logos/logo-poli-politecnico-grancolombiano2018.png'\n          },\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 240,\n            width: 320,\n            flex: 1,\n            resizeMode: 'contain'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }, item.short_description))), React.createElement(CardItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          }\n        }, React.createElement(Right, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          }\n        }, React.createElement(Button, {\n          style: {\n            backgroundColor: '#0F385A',\n            width: 100,\n            justifyContent: 'center'\n          },\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Terminos', {\n              info: item\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          }\n        }, \"Ver m\\xE1s\"))))));\n      })), React.createElement(Footer, {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: '#0F385A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, React.createElement(FooterTab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }, React.createElement(Button, {\n        vertical: true,\n        style: {\n          backgroundColor: '#0F385A'\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Noticias');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }, React.createElement(Icon, {\n        active: true,\n        name: \"paper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, \"Noticias\")), React.createElement(Button, {\n        vertical: true,\n        active: true,\n        style: {\n          backgroundColor: '#0F385A'\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Eventos');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        }\n      }, dataNew.length === 0 ? null : React.createElement(Badge, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }, dataNew.length)), React.createElement(Icon, {\n        name: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        }\n      }, \"Eventos\")))));\n    }\n  }]);\n\n  return Events;\n}(Component);\n\nEvents.navigationOptions = {\n  drawerIcon: function drawerIcon(_ref) {\n    var tintColor = _ref.tintColor;\n    return React.createElement(Icon, {\n      name: \"calendar\",\n      style: {\n        fontSize: 24,\n        color: tintColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    });\n  }\n};\nexport default Events;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/src/screens/Events.js"],"names":["React","Component","Header","Icon","Left","Card","CardItem","Thumbnail","Body","Button","Right","Footer","FooterTab","Badge","HeaderEntry","moment","urlApi","Toast","props","visible","ToastAndroid","showWithGravityAndOffset","message","LONG","CENTER","Events","componentDidMount","fetch","method","headers","Accept","then","response","json","responseJson","console","log","setState","isLoading","data","reverse","catch","error","_onRefresh","refreshing","state","dataNew","filter","status","flex","padding","styles","container","display","alignItems","backgroundColor","color","navigation","openDrawer","map","item","i","require","resizeMode","name","created_at","format","uri","imagenUrl","justifyContent","height","width","short_description","navigate","info","length","navigationOptions","drawerIcon","tintColor","fontSize","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { RefreshControl, StyleSheet, Text, View, ScrollView, ActivityIndicator, Image, ToastAndroid } from 'react-native';\nimport { Header, Icon, Left, Card, CardItem, Thumbnail, Body, Button, Right, Footer, FooterTab, Badge} from 'native-base'\nimport HeaderEntry from '../Components/Header'\nimport moment from 'moment'\nimport urlApi from '../../ConstIP'\n\nconst Toast = (props) => {\n  if (props.visible) {\n    ToastAndroid.showWithGravityAndOffset(\n      props.message,\n      ToastAndroid.LONG,\n      ToastAndroid.CENTER,\n      25,\n      50,\n    );\n    return null;\n  }\n  return null;\n};\n\nclass Events extends Component {\n    constructor(props){\n      super(props);\n      this.state ={ \n        data: [],\n        isLoading: true,\n        refreshing: false\n      }\n    }\n\n    static navigationOptions = {\n        drawerIcon : ({tintColor}) =>(\n            <Icon name='calendar'  style={{\n                fontSize:24, color: tintColor\n            }}/>\n        )\n    }\n    componentDidMount = async () => {\n      return fetch(`${urlApi}/events/`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        }\n      }).then((response) => response.json())\n      .then((responseJson) => {\n        console.log('responseJson',responseJson)\n        this.setState({\n          isLoading: false,\n          data: responseJson.reverse()\n        })\n      }).catch((error) =>{\n        console.error(error);\n      });\n    }\n  _onRefresh = () => {\n    this.setState({refreshing: true})\n    fetch(`${urlApi}/events/`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }).then((response) => response.json())\n    .then((responseJson) => {\n      console.log('responseJson',responseJson)\n      this.setState({\n        isLoading: false,\n        data: responseJson.reverse()\n      })\n    }).then(() => {\n      this.setState({\n        refreshing: false\n      })\n    })\n  }\n  render() {\n    const { data, isLoading } = this.state\n    const dataNew = data.filter(data => (data.status === 0))\n    if(isLoading){\n      return(\n        <View style={{flex: 1, padding: 50}}>\n          <ActivityIndicator/>\n        </View>\n      )\n    }\n    return (\n      <View style={styles.container}>\n        <HeaderEntry/>\n        <Header style={{display: 'flex', alignItems:'center', backgroundColor: '#0F385A' }}>\n          <View style={{flex: 1}}>\n          <Icon name='menu' style={{color: 'white'}} onPress={()=>this.props.navigation.openDrawer()} />\n          </View>\n          <View style={{flex: 2}}>\n            <Text style={{color: 'white'}}> Eventos </Text>\n          </View>\n        </Header>\n        <ScrollView\n          refreshControl={\n            <RefreshControl \n              refreshing={this.state.refreshing}\n              onRefresh={this._onRefresh}\n            />\n          }\n        >\n          {data.map((item, i) => (\n            <View key={i}>\n                <Card style={{flex: 0}}>\n                <CardItem>\n                  <Left>\n                    <Thumbnail source={require('../../assets/logoPoli.png')} style={{resizeMode: 'contain'}} />\n                    <Body>\n                    {item.status === 0 ?\n                      <View>\n                      <Text style={{color: \"red\"}}>Nuevo Evento </Text>\n                      <Text>{item.name}</Text>\n                      <Toast visible={true} message=\"EVENTOS NUEVOS\" />\n                    </View>\n                    :\n                    <Text>{item.name}</Text>\n                    }\n                      <Text note>{moment(item.created_at).format(\"YYYY-MM-DD\")}</Text>\n                    </Body>\n                  </Left>\n                </CardItem>\n                <CardItem>\n                  <Body style={{display: 'flex', alignItems:'center' }}>\n                    <Image source={{uri: item.imagenUrl !== \"\" ? item.imagenUrl : 'https://www.poli.edu.co/sites/default/files/logos/logo-poli-politecnico-grancolombiano2018.png' }} style={{ justifyContent: 'center',\n                      alignItems: 'center', height: 240, width: 320, flex: 1, resizeMode: 'contain'}}\n                    />\n                    <Text>\n                      {item.short_description}\n                    </Text>\n                  </Body>\n                </CardItem>\n                <CardItem>\n                  <Right style={{flex: 1}}>\n                    <Button style={{backgroundColor: '#0F385A', width: 100, justifyContent: 'center'}} onPress = {() => this.props.navigation.navigate('Terminos', { info: item })}>\n                      <Text style={{color: 'white'}}>Ver más</Text>\n                    </Button>\n                  </Right>\n                </CardItem>\n              </Card>\n            </View>\n          ))}\n        </ScrollView>\n        <Footer style={{display: 'flex', alignItems:'center', backgroundColor: '#0F385A'}}>\n        <FooterTab>\n            <Button vertical\n              style={{backgroundColor: '#0F385A'}}\n              onPress = {() => this.props.navigation.navigate('Noticias')}\n            >\n              <Icon active name=\"paper\" />\n              <Text style={{color: 'white'}}>Noticias</Text>\n            </Button>\n            <Button vertical active\n              style={{backgroundColor: '#0F385A'}}\n              onPress = {() => this.props.navigation.navigate('Eventos')}\n            >\n              {dataNew.length === 0 ? null : <Badge ><Text style={{color: \"white\"}}>{dataNew.length}</Text></Badge> }\n              <Icon name=\"calendar\" />\n              <Text style={{color: 'white'}}>Eventos</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </View>\n    );\n  }\n}\nexport default Events\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n});\n"]},"metadata":{},"sourceType":"module"}