{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/BottomNavigation/BottomNavigationAction.react.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ViewPropTypes } from \"../utils\";\nimport withTheme from \"../styles/withTheme\";\nimport RippleFeedback from \"../RippleFeedback\";\nimport Icon from \"../Icon\";\nvar propTypes = {\n  testID: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  iconSet: PropTypes.string,\n  label: PropTypes.string,\n  active: PropTypes.bool,\n  onPress: PropTypes.func,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    active: Text.propTypes.style,\n    disabled: Text.propTypes.style\n  }),\n  disabled: PropTypes.bool\n};\nvar defaultProps = {\n  testID: null,\n  label: null,\n  onPress: null,\n  iconSet: null,\n  active: false,\n  disabled: false,\n  style: {}\n};\n\nfunction getStyles(props) {\n  var bottomNavigationAction = props.theme.bottomNavigationAction;\n  var local = {};\n\n  if (props.active) {\n    local.container = bottomNavigationAction.containerActive;\n    local.icon = bottomNavigationAction.iconActive;\n    local.label = bottomNavigationAction.labelActive;\n  }\n\n  if (!props.label) {\n    local.container = {\n      paddingTop: 16,\n      paddingBottom: 16\n    };\n  }\n\n  return {\n    container: [bottomNavigationAction.container, local.container, props.style.container],\n    icon: [bottomNavigationAction.icon, local.icon, props.style.icon],\n    label: [bottomNavigationAction.label, local.label, props.style.label]\n  };\n}\n\nvar BottomNavigationAction = function (_PureComponent) {\n  _inherits(BottomNavigationAction, _PureComponent);\n\n  function BottomNavigationAction() {\n    _classCallCheck(this, BottomNavigationAction);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BottomNavigationAction).apply(this, arguments));\n  }\n\n  _createClass(BottomNavigationAction, [{\n    key: \"renderIcon\",\n    value: function renderIcon(styles) {\n      var icon = this.props.icon;\n\n      var _StyleSheet$flatten = StyleSheet.flatten(styles.icon),\n          color = _StyleSheet$flatten.color;\n\n      var element;\n\n      if (React.isValidElement(icon)) {\n        element = React.cloneElement(icon, {\n          style: styles.icon,\n          color: color\n        });\n      } else {\n        element = React.createElement(Icon, {\n          name: icon,\n          style: styles.icon,\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          }\n        });\n      }\n\n      return element;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(styles) {\n      var label = this.props.label;\n\n      if (!label) {\n        return null;\n      }\n\n      return React.createElement(Text, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, label);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPress = _this$props.onPress,\n          testID = _this$props.testID,\n          disabled = _this$props.disabled;\n      var styles = getStyles(this.props, this.context);\n      return React.createElement(RippleFeedback, {\n        disabled: disabled,\n        testID: testID,\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        pointerEvents: \"box-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }, this.renderIcon(styles), this.renderLabel(styles)));\n    }\n  }]);\n\n  return BottomNavigationAction;\n}(PureComponent);\n\nBottomNavigationAction.propTypes = propTypes;\nBottomNavigationAction.defaultProps = defaultProps;\nexport default withTheme(BottomNavigationAction);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/BottomNavigation/BottomNavigationAction.react.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","withTheme","RippleFeedback","Icon","propTypes","testID","string","icon","oneOfType","element","isRequired","iconSet","label","active","bool","onPress","func","style","shape","container","Text","disabled","defaultProps","getStyles","props","bottomNavigationAction","theme","local","containerActive","iconActive","labelActive","paddingTop","paddingBottom","BottomNavigationAction","styles","StyleSheet","flatten","color","isValidElement","cloneElement","context","renderIcon","renderLabel"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { ViewPropTypes } from '../utils';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport withTheme from '../styles/withTheme';\n\nimport RippleFeedback from '../RippleFeedback';\nimport Icon from '../Icon';\n\nconst propTypes = {\n  testID: PropTypes.string,\n  /**\n   * Will be rendered above the label as a content of the action.\n   * If string, result will be <Icon name={icon} ...rest />\n   * If ReactElement, will be used as is\n   */\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  /**\n   * Name of Icon set that should be use. From react-native-vector-icons\n   */\n  iconSet: PropTypes.string,\n  /**\n   * Will be rendered under the icon as a content of the action.\n   */\n  label: PropTypes.string,\n  /**\n   * True if the action is active (for now it'll be highlight by primary color)\n   */\n  active: PropTypes.bool,\n  /**\n   * Callback for on press event.\n   */\n  onPress: PropTypes.func,\n  /**\n   * Inline style of bottom navigation\n   */\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    active: Text.propTypes.style, // eslint-disable-line\n    disabled: Text.propTypes.style, // eslint-disable-line\n  }),\n  disabled: PropTypes.bool,\n};\nconst defaultProps = {\n  testID: null,\n  label: null,\n  onPress: null,\n  iconSet: null,\n  active: false,\n  disabled: false,\n  style: {},\n};\n\nfunction getStyles(props) {\n  const { bottomNavigationAction } = props.theme;\n\n  const local = {};\n\n  if (props.active) {\n    local.container = bottomNavigationAction.containerActive;\n    local.icon = bottomNavigationAction.iconActive;\n    local.label = bottomNavigationAction.labelActive;\n  }\n\n  if (!props.label) {\n    local.container = { paddingTop: 16, paddingBottom: 16 };\n  }\n\n  return {\n    container: [\n      bottomNavigationAction.container,\n      local.container,\n      props.style.container,\n    ],\n    icon: [bottomNavigationAction.icon, local.icon, props.style.icon],\n    label: [bottomNavigationAction.label, local.label, props.style.label],\n  };\n}\n\nclass BottomNavigationAction extends PureComponent {\n  renderIcon(styles) {\n    const { icon } = this.props;\n    const { color } = StyleSheet.flatten(styles.icon);\n\n    let element;\n    if (React.isValidElement(icon)) {\n      // we need icon to change color after it's selected, so we send the color and style to\n      // custom element\n      element = React.cloneElement(icon, { style: styles.icon, color });\n    } else {\n      element = <Icon name={icon} style={styles.icon} color={color} />;\n    }\n    return element;\n  }\n\n  renderLabel(styles) {\n    const { label } = this.props;\n\n    if (!label) {\n      return null;\n    }\n\n    return <Text style={styles.label}>{label}</Text>;\n  }\n\n  render() {\n    const { onPress, testID, disabled } = this.props;\n\n    const styles = getStyles(this.props, this.context);\n\n    return (\n      <RippleFeedback disabled={disabled} testID={testID} onPress={onPress}>\n        <View style={styles.container} pointerEvents=\"box-only\">\n          {this.renderIcon(styles)}\n          {this.renderLabel(styles)}\n        </View>\n      </RippleFeedback>\n    );\n  }\n}\n\nBottomNavigationAction.propTypes = propTypes;\nBottomNavigationAction.defaultProps = defaultProps;\n\nexport default withTheme(BottomNavigationAction);\n"]},"metadata":{},"sourceType":"module"}