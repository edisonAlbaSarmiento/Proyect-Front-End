{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Divider/Divider.react.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"../utils\";\nimport withTheme from \"../styles/withTheme\";\nvar propTypes = {\n  inset: PropTypes.bool,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style\n  })\n};\nvar defaultProps = {\n  inset: false,\n  style: {}\n};\n\nfunction getStyles(props) {\n  var divider = props.theme.divider;\n  var local = {\n    container: props.inset ? {\n      marginLeft: 72\n    } : null\n  };\n  return {\n    container: [divider.container, local.container, props.style.container]\n  };\n}\n\nvar Divider = function (_PureComponent) {\n  _inherits(Divider, _PureComponent);\n\n  function Divider() {\n    _classCallCheck(this, Divider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Divider).apply(this, arguments));\n  }\n\n  _createClass(Divider, [{\n    key: \"render\",\n    value: function render() {\n      var styles = getStyles(this.props, this.context);\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      });\n    }\n  }]);\n\n  return Divider;\n}(PureComponent);\n\nDivider.propTypes = propTypes;\nDivider.defaultProps = defaultProps;\nexport default withTheme(Divider);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Divider/Divider.react.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","withTheme","propTypes","inset","bool","style","shape","container","defaultProps","getStyles","props","divider","theme","local","marginLeft","Divider","styles","context"],"mappings":";;;;;;;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,aAAT;AACA,OAAOC,SAAP;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,IADD;AAEhBC,EAAAA,KAAK,EAAEN,SAAS,CAACO,KAAV,CAAgB;AACrBC,IAAAA,SAAS,EAAEP,aAAa,CAACK;AADJ,GAAhB;AAFS,CAAlB;AAMA,IAAMG,YAAY,GAAG;AACnBL,EAAAA,KAAK,EAAE,KADY;AAEnBE,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAChBC,OADgB,GACJD,KAAK,CAACE,KADF,CAChBD,OADgB;AAGxB,MAAME,KAAK,GAAG;AACZN,IAAAA,SAAS,EAAEG,KAAK,CAACP,KAAN,GAAc;AAAEW,MAAAA,UAAU,EAAE;AAAd,KAAd,GAAmC;AADlC,GAAd;AAIA,SAAO;AACLP,IAAAA,SAAS,EAAE,CAACI,OAAO,CAACJ,SAAT,EAAoBM,KAAK,CAACN,SAA1B,EAAqCG,KAAK,CAACL,KAAN,CAAYE,SAAjD;AADN,GAAP;AAGD;;IAEKQ,O;;;;;;;;;;;6BACK;AACP,UAAMC,MAAM,GAAGP,SAAS,CAAC,KAAKC,KAAN,EAAa,KAAKO,OAAlB,CAAxB;AAEA,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACT,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EALmBT,a;;AAQtBiB,OAAO,CAACb,SAAR,GAAoBA,SAApB;AACAa,OAAO,CAACP,YAAR,GAAuBA,YAAvB;AAEA,eAAeP,SAAS,CAACc,OAAD,CAAxB","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport { View } from 'react-native';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport { ViewPropTypes } from '../utils';\nimport withTheme from '../styles/withTheme';\n\nconst propTypes = {\n  inset: PropTypes.bool,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n  }),\n};\nconst defaultProps = {\n  inset: false,\n  style: {},\n};\n\nfunction getStyles(props) {\n  const { divider } = props.theme;\n\n  const local = {\n    container: props.inset ? { marginLeft: 72 } : null,\n  };\n\n  return {\n    container: [divider.container, local.container, props.style.container],\n  };\n}\n\nclass Divider extends PureComponent {\n  render() {\n    const styles = getStyles(this.props, this.context);\n\n    return <View style={styles.container} />;\n  }\n}\n\nDivider.propTypes = propTypes;\nDivider.defaultProps = defaultProps;\n\nexport default withTheme(Divider);\n"]},"metadata":{},"sourceType":"module"}