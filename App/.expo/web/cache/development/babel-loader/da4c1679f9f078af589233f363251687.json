{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Toolbar/Toolbar.react.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes, BackAndroid } from \"../utils\";\nimport LeftElement from \"./LeftElement.react\";\nimport CenterElement from \"./CenterElement.react\";\nimport RightElement from \"./RightElement.react\";\nimport isFunction from \"../utils/isFunction\";\nimport withTheme from \"../styles/withTheme\";\nvar propTypes = {\n  isSearchActive: PropTypes.bool,\n  searchable: PropTypes.shape({\n    onChangeText: PropTypes.func,\n    onSearchClosed: PropTypes.func,\n    onSearchCloseRequested: PropTypes.func,\n    onSearchPressed: PropTypes.func,\n    onSubmitEditing: PropTypes.func,\n    placeholder: PropTypes.string,\n    autoFocus: PropTypes.bool,\n    autoCapitalize: PropTypes.string,\n    autoCorrect: PropTypes.bool,\n    icon: PropTypes.string\n  }),\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    leftElementContainer: ViewPropTypes.style,\n    leftElement: PropTypes.any,\n    centerElementContainer: ViewPropTypes.style,\n    titleText: Text.propTypes.style,\n    rightElementContainer: ViewPropTypes.style,\n    rightElement: PropTypes.any\n  }),\n  size: PropTypes.number,\n  hidden: PropTypes.bool,\n  onPress: PropTypes.func,\n  leftElement: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  onLeftElementPress: PropTypes.func,\n  centerElement: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  rightElement: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.string])),\n    menu: PropTypes.shape({\n      icon: PropTypes.string,\n      labels: PropTypes.arrayOf(PropTypes.string)\n    })\n  })]),\n  onRightElementPress: PropTypes.func,\n  theme: PropTypes.any\n};\nvar defaultProps = {\n  style: {},\n  hidden: false,\n  isSearchActive: false,\n  onRightElementPress: null,\n  rightElement: null,\n  searchable: null,\n  onPress: null,\n  centerElement: null,\n  leftElement: null,\n  onLeftElementPress: null,\n  size: 24\n};\n\nvar getBackButtonListener = function getBackButtonListener(callback) {\n  return BackAndroid.addEventListener('hardwareBackPress', callback);\n};\n\nfunction getStyles(props) {\n  var toolbar = props.theme.toolbar;\n  return {\n    container: [toolbar.container, props.style.container]\n  };\n}\n\nvar Toolbar = function (_PureComponent) {\n  _inherits(Toolbar, _PureComponent);\n\n  function Toolbar(props) {\n    var _this;\n\n    _classCallCheck(this, Toolbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Toolbar).call(this, props));\n\n    _this.onSearchOpenRequested = function () {\n      _this.setState({\n        isSearchActiveInternal: true,\n        searchValue: ''\n      });\n\n      _this.animateSearchBackground(function () {\n        var defaultScaleValue = _this.state.defaultScaleValue;\n        defaultScaleValue.setValue(0.01);\n\n        _this.setState({\n          order: 'searchFirst'\n        });\n\n        _this.backButtonListener = getBackButtonListener(_this.onSearchCloseRequested);\n      });\n    };\n\n    _this.onSearchPressed = function () {\n      _this.onSearchOpenRequested();\n\n      var searchable = _this.props.searchable;\n\n      if (searchable && isFunction(searchable.onSearchPressed)) {\n        searchable.onSearchPressed();\n      }\n    };\n\n    _this.onSearchTextChanged = function (value) {\n      var searchable = _this.props.searchable;\n\n      if (searchable && isFunction(searchable.onChangeText)) {\n        searchable.onChangeText(value);\n      }\n\n      _this.setState({\n        searchValue: value\n      });\n    };\n\n    _this.onSearchClearRequested = function () {\n      _this.onSearchTextChanged('');\n    };\n\n    _this.onSearchCloseRequested = function () {\n      var searchable = _this.props.searchable;\n      var searchScaleValue = _this.state.searchScaleValue;\n\n      if (searchable.onSearchCloseRequested) {\n        searchable.onSearchCloseRequested();\n      }\n\n      _this.setState({\n        isSearchActiveInternal: false,\n        searchValue: ''\n      });\n\n      _this.animateDefaultBackground(function () {\n        searchScaleValue.setValue(0.01);\n\n        _this.setState({\n          order: 'defaultFirst'\n        });\n\n        _this.onSearchClosed();\n      });\n\n      return true;\n    };\n\n    _this.onSearchClosed = function () {\n      var searchable = _this.props.searchable;\n\n      if (_this.backButtonListener) {\n        _this.backButtonListener.remove();\n      }\n\n      if (searchable && isFunction(searchable.onSearchClosed)) {\n        searchable.onSearchClosed();\n      }\n    };\n\n    _this.onLayout = function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var radius = Math.sqrt(Math.pow(height, 2) + Math.pow(width, 2));\n      var diameter = radius * 2;\n      var bgPosition = width - radius;\n      var pointSize = diameter * 0.01;\n      diameter += pointSize;\n\n      _this.setState({\n        bgPosition: bgPosition,\n        radius: diameter / 2,\n        diameter: diameter\n      });\n    };\n\n    _this.animateSearchBackground = function (onComplete) {\n      var searchScaleValue = _this.state.searchScaleValue;\n      Animated.timing(searchScaleValue, {\n        toValue: 1,\n        duration: 325,\n        easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n        useNativeDriver: true\n      }).start(onComplete);\n    };\n\n    _this.animateDefaultBackground = function (onComplete) {\n      var defaultScaleValue = _this.state.defaultScaleValue;\n      Animated.timing(defaultScaleValue, {\n        toValue: 1,\n        duration: 325,\n        easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n        useNativeDriver: true\n      }).start(onComplete);\n    };\n\n    _this.show = function () {\n      var moveAnimated = _this.state.moveAnimated;\n      Animated.timing(moveAnimated, {\n        toValue: 0,\n        duration: 225,\n        easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this.hide = function () {\n      var moveAnimated = _this.state.moveAnimated;\n      var styles = getStyles(_this.props);\n      Animated.timing(moveAnimated, {\n        toValue: -1 * StyleSheet.flatten(styles.container).height,\n        duration: 195,\n        easing: Easing.bezier(0.4, 0.0, 0.6, 1),\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this.renderAnimatedBackgrounds = function (styles) {\n      var theme = _this.props.theme;\n      var _this$state = _this.state,\n          diameter = _this$state.diameter,\n          bgPosition = _this$state.bgPosition,\n          radius = _this$state.radius,\n          defaultScaleValue = _this$state.defaultScaleValue,\n          searchScaleValue = _this$state.searchScaleValue,\n          order = _this$state.order;\n      var bgStyle = {\n        position: 'absolute',\n        top: -radius,\n        width: diameter,\n        height: diameter,\n        borderRadius: radius\n      };\n      var toolbarSearchActive = theme.toolbarSearchActive;\n      var container = StyleSheet.flatten(styles.container);\n      var searchActive = StyleSheet.flatten(toolbarSearchActive.container);\n      var bgSearch = React.createElement(Animated.View, {\n        key: \"searchBackground\",\n        style: [bgStyle, {\n          left: bgPosition,\n          backgroundColor: searchActive.backgroundColor,\n          transform: [{\n            scale: searchScaleValue\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        }\n      });\n      var bgDefault = React.createElement(Animated.View, {\n        key: \"defaultBackground\",\n        style: [bgStyle, {\n          right: bgPosition,\n          backgroundColor: container.backgroundColor,\n          transform: [{\n            scale: defaultScaleValue\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        }\n      });\n      var content = null;\n\n      if (order === 'defaultFirst') {\n        content = [bgDefault, bgSearch];\n      } else {\n        content = [bgSearch, bgDefault];\n      }\n\n      return React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        }\n      }, content);\n    };\n\n    var isSearchActiveInternal = props.isSearchActive || false;\n    _this.backButtonListener = isSearchActiveInternal ? getBackButtonListener(_this.onSearchCloseRequested) : null;\n    _this.state = {\n      isSearchActiveInternal: isSearchActiveInternal,\n      searchValue: '',\n      defaultScaleValue: new Animated.Value(isSearchActiveInternal ? 0.01 : 1),\n      searchScaleValue: new Animated.Value(isSearchActiveInternal ? 1 : 0.01),\n      radius: 0,\n      diameter: 0,\n      order: isSearchActiveInternal ? 'searchFirst' : 'defaultFirst',\n      positionValue: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(Toolbar, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var isSearchActiveInternal = this.state.isSearchActiveInternal;\n      var _this$props = this.props,\n          isSearchActive = _this$props.isSearchActive,\n          hidden = _this$props.hidden;\n\n      if (isSearchActiveInternal && !nextProps.searchable) {\n        this.onSearchCloseRequested();\n      }\n\n      if (isSearchActive !== nextProps.isSearchActive) {\n        var nextIsSearchActive = !!nextProps.isSearchActive;\n\n        if (isSearchActiveInternal !== nextIsSearchActive) {\n          if (nextIsSearchActive) {\n            this.onSearchOpenRequested();\n          } else {\n            this.onSearchCloseRequested();\n          }\n        }\n      }\n\n      if (nextProps.hidden !== hidden) {\n        if (nextProps.hidden === true) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }\n  }, {\n    key: \"focusSearchField\",\n    value: function focusSearchField() {\n      this.searchFieldRef.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onLeftElementPress = _this$props2.onLeftElementPress,\n          onPress = _this$props2.onPress,\n          onRightElementPress = _this$props2.onRightElementPress;\n      var _this$state2 = this.state,\n          isSearchActiveInternal = _this$state2.isSearchActiveInternal,\n          searchValue = _this$state2.searchValue,\n          positionValue = _this$state2.positionValue;\n      var styles = getStyles(this.props);\n      return React.createElement(Animated.View, {\n        onLayout: this.onLayout,\n        style: [styles.container, {\n          transform: [{\n            translateY: positionValue\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        }\n      }, this.renderAnimatedBackgrounds(styles), React.createElement(LeftElement, _extends({}, this.props, {\n        onLeftElementPress: onLeftElementPress,\n        isSearchActive: isSearchActiveInternal,\n        onSearchClose: this.onSearchCloseRequested,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        }\n      })), React.createElement(CenterElement, _extends({}, this.props, {\n        onPress: onPress,\n        searchValue: searchValue,\n        isSearchActive: isSearchActiveInternal,\n        onSearchTextChange: this.onSearchTextChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        }\n      })), React.createElement(RightElement, _extends({}, this.props, {\n        searchValue: searchValue,\n        isSearchActive: isSearchActiveInternal,\n        onSearchPress: this.onSearchPressed,\n        onSearchClearRequest: this.onSearchClearRequested,\n        onRightElementPress: onRightElementPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        }\n      })));\n    }\n  }]);\n\n  return Toolbar;\n}(PureComponent);\n\nToolbar.propTypes = propTypes;\nToolbar.defaultProps = defaultProps;\nexport default withTheme(Toolbar);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Toolbar/Toolbar.react.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","BackAndroid","LeftElement","CenterElement","RightElement","isFunction","withTheme","propTypes","isSearchActive","bool","searchable","shape","onChangeText","func","onSearchClosed","onSearchCloseRequested","onSearchPressed","onSubmitEditing","placeholder","string","autoFocus","autoCapitalize","autoCorrect","icon","style","container","leftElementContainer","leftElement","any","centerElementContainer","titleText","Text","rightElementContainer","rightElement","size","number","hidden","onPress","oneOfType","element","onLeftElementPress","centerElement","arrayOf","actions","menu","labels","onRightElementPress","theme","defaultProps","getBackButtonListener","callback","addEventListener","getStyles","props","toolbar","Toolbar","onSearchOpenRequested","setState","isSearchActiveInternal","searchValue","animateSearchBackground","defaultScaleValue","state","setValue","order","backButtonListener","onSearchTextChanged","value","onSearchClearRequested","searchScaleValue","animateDefaultBackground","remove","onLayout","event","nativeEvent","layout","width","height","radius","Math","sqrt","pow","diameter","bgPosition","pointSize","onComplete","Animated","timing","toValue","duration","easing","Easing","bezier","useNativeDriver","start","show","moveAnimated","hide","styles","StyleSheet","flatten","renderAnimatedBackgrounds","bgStyle","position","top","borderRadius","toolbarSearchActive","searchActive","bgSearch","left","backgroundColor","transform","scale","bgDefault","right","content","absoluteFill","Value","positionValue","nextProps","nextIsSearchActive","searchFieldRef","focus","translateY"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing, StyleSheet, Text, View } from 'react-native';\nimport { ViewPropTypes, BackAndroid } from '../utils';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport LeftElement from './LeftElement.react';\nimport CenterElement from './CenterElement.react';\nimport RightElement from './RightElement.react';\nimport isFunction from '../utils/isFunction';\nimport withTheme from '../styles/withTheme';\n\nconst propTypes = {\n  /**\n   * Indicates if search is active or not\n   */\n  isSearchActive: PropTypes.bool,\n  /**\n   * When you want to activate search feature you have to pass this object with config of search.\n   */\n  searchable: PropTypes.shape({\n    /**\n     * Called when search text was changed.\n     */\n    onChangeText: PropTypes.func,\n    /**\n     * Called when search was closed.\n     */\n    onSearchClosed: PropTypes.func,\n    /**\n     * Called when action to close search was requested.\n     */\n    onSearchCloseRequested: PropTypes.func,\n    /**\n     * Called when search was opened.\n     */\n    onSearchPressed: PropTypes.func,\n    /**\n     * Called when user press submit button on hw keyboard\n     */\n    onSubmitEditing: PropTypes.func,\n    /**\n     * Will shown as placeholder for search input.\n     */\n    placeholder: PropTypes.string,\n    /**\n     * Indicates when input should be focused after the search is opened.\n     */\n    autoFocus: PropTypes.bool,\n    /**\n     * Enable auto-capitalize for search input\n     */\n    autoCapitalize: PropTypes.string,\n    /**\n     * Enable auto-correct for search input\n     */\n    autoCorrect: PropTypes.bool,\n    /**\n     * Override default search icon\n     */\n    icon: PropTypes.string,\n  }),\n  /**\n   * You can overide any style for the component via this prop\n   */\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    leftElementContainer: ViewPropTypes.style,\n    // FIXME\n    leftElement: PropTypes.any, // eslint-disable-line\n    centerElementContainer: ViewPropTypes.style,\n    titleText: Text.propTypes.style, // eslint-disable-line\n    rightElementContainer: ViewPropTypes.style,\n    rightElement: PropTypes.any, // eslint-disable-line\n  }),\n  /**\n   * This size is used for each icon on the toolbar\n   */\n  size: PropTypes.number,\n  /**\n   * Wether or not the Toolbar should show\n   */\n  hidden: PropTypes.bool,\n  /**\n   * Called when centerElement was pressed.\n   * TODO: better to rename to onCenterElementPress\n   */\n  onPress: PropTypes.func,\n  /**\n   * Will be shown on the left side.\n   */\n  leftElement: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /**\n   * Called when leftElement was pressed.\n   */\n  onLeftElementPress: PropTypes.func,\n  /**\n   * Will be shown between leftElement and rightElement. Usually use for title.\n   */\n  centerElement: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /**\n   * Will be shown on the right side.\n   */\n  rightElement: PropTypes.oneOfType([\n    /**\n     * Whatever you want to have on the right side\n     */\n    PropTypes.element,\n    /**\n     * One action (name of icon). Alias for ['icon1'].\n     */\n    PropTypes.string,\n    /**\n     * For many actions: ['icon1', 'icon2', ...]\n     */\n    PropTypes.arrayOf(PropTypes.string),\n    /**\n     * For actions and menu. The menu will be shown as last one icon.\n     */\n    PropTypes.shape({\n      actions: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n      ),\n      menu: PropTypes.shape({\n        icon: PropTypes.string,\n        labels: PropTypes.arrayOf(PropTypes.string),\n      }),\n    }),\n  ]),\n  /**\n   * Called when rightElement was pressed.\n   */\n  onRightElementPress: PropTypes.func,\n  /**\n   * Theme\n   */\n  theme: PropTypes.any, // eslint-disable-line\n};\nconst defaultProps = {\n  style: {},\n  hidden: false,\n  isSearchActive: false,\n  onRightElementPress: null,\n  rightElement: null,\n  searchable: null,\n  onPress: null,\n  centerElement: null,\n  leftElement: null,\n  onLeftElementPress: null,\n  size: 24,\n};\n\nconst getBackButtonListener = callback =>\n  BackAndroid.addEventListener('hardwareBackPress', callback);\n\n// const isSearchable = props => (props.searchable && props.isSearchActive) || false;\n// const getIsSearchActive = (props, state) => (props.searchable && state.isSearchActive) || false;\n\nfunction getStyles(props) {\n  const { toolbar } = props.theme;\n\n  return {\n    container: [toolbar.container, props.style.container],\n  };\n}\n\nclass Toolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const isSearchActiveInternal = props.isSearchActive || false;\n    this.backButtonListener = isSearchActiveInternal\n      ? getBackButtonListener(this.onSearchCloseRequested)\n      : null;\n\n    this.state = {\n      // indicates if searc is activated\n      isSearchActiveInternal,\n      // value for serach input\n      searchValue: '',\n      // everything around background animation\n      defaultScaleValue: new Animated.Value(isSearchActiveInternal ? 0.01 : 1),\n      searchScaleValue: new Animated.Value(isSearchActiveInternal ? 1 : 0.01),\n      radius: 0,\n      diameter: 0,\n      // it'll change z index after the animation is complete\n      order: isSearchActiveInternal ? 'searchFirst' : 'defaultFirst',\n      // toolbar animation - you can hide toolbar via hidden prop\n      positionValue: new Animated.Value(0),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { isSearchActiveInternal } = this.state;\n    const { isSearchActive, hidden } = this.props;\n\n    // if search is active and we clicked on the results which does not allow search\n    // then close the previous search.\n    if (isSearchActiveInternal && !nextProps.searchable) {\n      this.onSearchCloseRequested();\n    }\n\n    // there should be also posibility to change search through props, so we need to check\n    // props first and then we should check state if we need to change search state\n    if (isSearchActive !== nextProps.isSearchActive) {\n      // because nextProps.isSearchActive could be null, undefined\n      // so we need it convert to boolean\n      const nextIsSearchActive = !!nextProps.isSearchActive;\n      if (isSearchActiveInternal !== nextIsSearchActive) {\n        if (nextIsSearchActive) {\n          this.onSearchOpenRequested();\n        } else {\n          this.onSearchCloseRequested();\n        }\n      }\n    }\n\n    // if hidden prop is changed we animate show or hide\n    if (nextProps.hidden !== hidden) {\n      if (nextProps.hidden === true) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }\n\n  onSearchOpenRequested = () => {\n    this.setState({\n      isSearchActiveInternal: true,\n      searchValue: '',\n      // zIndex: 'toDefaultNext',\n    });\n\n    this.animateSearchBackground(() => {\n      const { defaultScaleValue } = this.state;\n\n      // default scale set up back to \"hidden\" value\n      defaultScaleValue.setValue(0.01);\n      this.setState({ order: 'searchFirst' });\n      // on android it's typical that back button closes search input on toolbar\n      this.backButtonListener = getBackButtonListener(\n        this.onSearchCloseRequested,\n      );\n    });\n  };\n\n  onSearchPressed = () => {\n    this.onSearchOpenRequested();\n\n    const { searchable } = this.props;\n\n    if (searchable && isFunction(searchable.onSearchPressed)) {\n      searchable.onSearchPressed();\n    }\n  };\n\n  onSearchTextChanged = value => {\n    const { searchable } = this.props;\n\n    if (searchable && isFunction(searchable.onChangeText)) {\n      searchable.onChangeText(value);\n    }\n\n    this.setState({ searchValue: value });\n  };\n\n  onSearchClearRequested = () => {\n    this.onSearchTextChanged('');\n  };\n\n  /**\n   * Android's HW/SW back button\n   */\n  onSearchCloseRequested = () => {\n    const { searchable } = this.props;\n    const { searchScaleValue } = this.state;\n\n    if (searchable.onSearchCloseRequested) {\n      searchable.onSearchCloseRequested();\n    }\n\n    this.setState({\n      isSearchActiveInternal: false,\n      searchValue: '',\n    });\n\n    this.animateDefaultBackground(() => {\n      // default scale set up back to \"hidden\" value\n      searchScaleValue.setValue(0.01);\n      this.setState({ order: 'defaultFirst' });\n\n      this.onSearchClosed();\n    });\n\n    return true; // because we need to stop propagation\n  };\n\n  onSearchClosed = () => {\n    const { searchable } = this.props;\n\n    if (this.backButtonListener) {\n      this.backButtonListener.remove();\n    }\n\n    if (searchable && isFunction(searchable.onSearchClosed)) {\n      searchable.onSearchClosed();\n    }\n  };\n\n  onLayout = event => {\n    const { width, height } = event.nativeEvent.layout;\n\n    // pythagorean\n    const radius = Math.sqrt(Math.pow(height, 2) + Math.pow(width, 2)); // eslint-disable-line\n    let diameter = radius * 2;\n    // if there wasn't issue in react native we wouldn't do this\n    // because there is issue in react native that we can't set scale value to 0, we need to use\n    // 0.01 and it means we still see the point even if the scale set to 0.01\n    const bgPosition = width - radius; // the correct left position of circle background\n    // we need circle to be bigger, then we won't see the 0.01 scaled point (because it'll be\n    // out of screen)\n    const pointSize = diameter * 0.01;\n    diameter += pointSize;\n\n    this.setState({\n      bgPosition,\n      radius: diameter / 2,\n      diameter,\n    });\n  };\n\n  animateSearchBackground = onComplete => {\n    const { searchScaleValue } = this.state;\n\n    Animated.timing(searchScaleValue, {\n      toValue: 1,\n      duration: 325,\n      easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n      useNativeDriver: true,\n    }).start(onComplete);\n  };\n\n  animateDefaultBackground = onComplete => {\n    const { defaultScaleValue } = this.state;\n\n    Animated.timing(defaultScaleValue, {\n      toValue: 1,\n      duration: 325,\n      easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n      useNativeDriver: true,\n    }).start(onComplete);\n  };\n\n  show = () => {\n    const { moveAnimated } = this.state;\n    Animated.timing(moveAnimated, {\n      toValue: 0,\n      duration: 225,\n      easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  hide = () => {\n    const { moveAnimated } = this.state;\n    const styles = getStyles(this.props);\n    Animated.timing(moveAnimated, {\n      toValue: -1 * StyleSheet.flatten(styles.container).height,\n      duration: 195,\n      easing: Easing.bezier(0.4, 0.0, 0.6, 1),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  focusSearchField() {\n    this.searchFieldRef.focus();\n  }\n\n  renderAnimatedBackgrounds = styles => {\n    const { theme } = this.props;\n    const {\n      diameter,\n      bgPosition,\n      radius,\n      defaultScaleValue,\n      searchScaleValue,\n      order,\n    } = this.state;\n\n    const bgStyle = {\n      position: 'absolute',\n      top: -radius,\n      width: diameter,\n      height: diameter,\n      borderRadius: radius,\n    };\n\n    const { toolbarSearchActive } = theme;\n    const container = StyleSheet.flatten(styles.container);\n    const searchActive = StyleSheet.flatten(toolbarSearchActive.container);\n\n    const bgSearch = (\n      <Animated.View\n        key=\"searchBackground\"\n        style={[\n          bgStyle,\n          {\n            left: bgPosition,\n            backgroundColor: searchActive.backgroundColor,\n            transform: [{ scale: searchScaleValue }],\n          },\n        ]}\n      />\n    );\n\n    const bgDefault = (\n      <Animated.View\n        key=\"defaultBackground\"\n        style={[\n          bgStyle,\n          {\n            right: bgPosition,\n            backgroundColor: container.backgroundColor,\n            transform: [{ scale: defaultScaleValue }],\n          },\n        ]}\n      />\n    );\n\n    let content = null;\n\n    if (order === 'defaultFirst') {\n      content = [bgDefault, bgSearch];\n    } else {\n      content = [bgSearch, bgDefault];\n    }\n\n    return <View style={StyleSheet.absoluteFill}>{content}</View>;\n  };\n\n  render() {\n    const { onLeftElementPress, onPress, onRightElementPress } = this.props;\n\n    const { isSearchActiveInternal, searchValue, positionValue } = this.state;\n    // TODO: move out from render method\n    const styles = getStyles(this.props);\n\n    return (\n      <Animated.View\n        onLayout={this.onLayout}\n        style={[\n          styles.container,\n          { transform: [{ translateY: positionValue }] },\n        ]}\n      >\n        {this.renderAnimatedBackgrounds(styles)}\n        <LeftElement\n          {...this.props}\n          onLeftElementPress={onLeftElementPress}\n          isSearchActive={isSearchActiveInternal}\n          onSearchClose={this.onSearchCloseRequested}\n        />\n        <CenterElement\n          {...this.props}\n          onPress={onPress}\n          searchValue={searchValue}\n          isSearchActive={isSearchActiveInternal}\n          onSearchTextChange={this.onSearchTextChanged}\n        />\n        <RightElement\n          {...this.props}\n          searchValue={searchValue}\n          isSearchActive={isSearchActiveInternal}\n          onSearchPress={this.onSearchPressed}\n          onSearchClearRequest={this.onSearchClearRequested}\n          onRightElementPress={onRightElementPress}\n        />\n      </Animated.View>\n    );\n  }\n}\n\nToolbar.propTypes = propTypes;\nToolbar.defaultProps = defaultProps;\n\nexport default withTheme(Toolbar);\n"]},"metadata":{},"sourceType":"module"}