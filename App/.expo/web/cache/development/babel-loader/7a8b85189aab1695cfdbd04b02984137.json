{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Dialog/DialogStackedActions.react.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../Button\";\nimport { ViewPropTypes } from \"../utils\";\nimport withTheme from \"../styles/withTheme\";\nvar propTypes = {\n  actions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onActionPress: PropTypes.func.isRequired,\n  options: PropTypes.objectOf(PropTypes.object),\n  style: PropTypes.shape({\n    stackedActionsContainer: ViewPropTypes.style\n  })\n};\nvar defaultProps = {\n  style: {},\n  options: {}\n};\n\nfunction getStyles(props) {\n  var dialog = props.theme.dialog;\n  return {\n    stackedActionsContainer: [dialog.stackedActionsContainer, props.style.stackedActionsContainer]\n  };\n}\n\nvar DialogStackedActions = function (_PureComponent) {\n  _inherits(DialogStackedActions, _PureComponent);\n\n  function DialogStackedActions() {\n    _classCallCheck(this, DialogStackedActions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DialogStackedActions).apply(this, arguments));\n  }\n\n  _createClass(DialogStackedActions, [{\n    key: \"renderAction\",\n    value: function renderAction(action) {\n      var _this$props = this.props,\n          options = _this$props.options,\n          onActionPress = _this$props.onActionPress;\n      var isButtonDisabled = options[\"\" + action] && options[\"\" + action].disabled;\n      return React.createElement(Button, {\n        key: action,\n        primary: true,\n        disabled: isButtonDisabled,\n        text: action,\n        onPress: onActionPress,\n        style: {\n          container: {\n            justifyContent: 'flex-end'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var actions = this.props.actions;\n      var styles = getStyles(this.props);\n      return React.createElement(View, {\n        style: styles.stackedActionsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, actions.map(function (action) {\n        return _this.renderAction(action);\n      }));\n    }\n  }]);\n\n  return DialogStackedActions;\n}(PureComponent);\n\nDialogStackedActions.propTypes = propTypes;\nDialogStackedActions.defaultProps = defaultProps;\nexport default withTheme(DialogStackedActions);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Dialog/DialogStackedActions.react.js"],"names":["React","PureComponent","PropTypes","Button","ViewPropTypes","withTheme","propTypes","actions","arrayOf","string","isRequired","onActionPress","func","options","objectOf","object","style","shape","stackedActionsContainer","defaultProps","getStyles","props","dialog","theme","DialogStackedActions","action","isButtonDisabled","disabled","container","justifyContent","styles","map","renderAction"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,OAAOC,MAAP;AACA,SAASC,aAAT;AACA,OAAOC,SAAP;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEL,SAAS,CAACM,OAAV,CAAkBN,SAAS,CAACO,MAA5B,EAAoCC,UAD7B;AAEhBC,EAAAA,aAAa,EAAET,SAAS,CAACU,IAAV,CAAeF,UAFd;AAGhBG,EAAAA,OAAO,EAAEX,SAAS,CAACY,QAAV,CAAmBZ,SAAS,CAACa,MAA7B,CAHO;AAIhBC,EAAAA,KAAK,EAAEd,SAAS,CAACe,KAAV,CAAgB;AACrBC,IAAAA,uBAAuB,EAAEd,aAAa,CAACY;AADlB,GAAhB;AAJS,CAAlB;AAQA,IAAMG,YAAY,GAAG;AACnBH,EAAAA,KAAK,EAAE,EADY;AAEnBH,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,SAASO,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAChBC,MADgB,GACLD,KAAK,CAACE,KADD,CAChBD,MADgB;AAGxB,SAAO;AACLJ,IAAAA,uBAAuB,EAAE,CACvBI,MAAM,CAACJ,uBADgB,EAEvBG,KAAK,CAACL,KAAN,CAAYE,uBAFW;AADpB,GAAP;AAMD;;IAEKM,oB;;;;;;;;;;;iCACSC,M,EAAQ;AAAA,wBACgB,KAAKJ,KADrB;AAAA,UACXR,OADW,eACXA,OADW;AAAA,UACFF,aADE,eACFA,aADE;AAEnB,UAAMe,gBAAgB,GACpBb,OAAO,MAAIY,MAAJ,CAAP,IAAwBZ,OAAO,MAAIY,MAAJ,CAAP,CAAqBE,QAD/C;AAGA,aACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEF,MADP;AAEE,QAAA,OAAO,MAFT;AAGE,QAAA,QAAQ,EAAEC,gBAHZ;AAIE,QAAA,IAAI,EAAED,MAJR;AAKE,QAAA,OAAO,EAAEd,aALX;AAME,QAAA,KAAK,EAAE;AACLiB,UAAAA,SAAS,EAAE;AACTC,YAAAA,cAAc,EAAE;AADP;AADN,SANT;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAcD;;;6BAEQ;AAAA;;AAAA,UACCtB,OADD,GACa,KAAKc,KADlB,CACCd,OADD;AAGP,UAAMuB,MAAM,GAAGV,SAAS,CAAC,KAAKC,KAAN,CAAxB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACZ,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACGX,OAAO,CAACwB,GAAR,CAAY,UAAAN,MAAM;AAAA,eAAI,KAAI,CAACO,YAAL,CAAkBP,MAAlB,CAAJ;AAAA,OAAlB,CADH,CADF;AAKD;;;;EAhCgCxB,a;;AAmCnCuB,oBAAoB,CAAClB,SAArB,GAAiCA,SAAjC;AACAkB,oBAAoB,CAACL,YAArB,GAAoCA,YAApC;AAEA,eAAed,SAAS,CAACmB,oBAAD,CAAxB","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from 'react-native';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport Button from '../Button';\nimport { ViewPropTypes } from '../utils';\nimport withTheme from '../styles/withTheme';\n\nconst propTypes = {\n  actions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onActionPress: PropTypes.func.isRequired,\n  options: PropTypes.objectOf(PropTypes.object),\n  style: PropTypes.shape({\n    stackedActionsContainer: ViewPropTypes.style,\n  }),\n};\nconst defaultProps = {\n  style: {},\n  options: {},\n};\n\nfunction getStyles(props) {\n  const { dialog } = props.theme;\n\n  return {\n    stackedActionsContainer: [\n      dialog.stackedActionsContainer,\n      props.style.stackedActionsContainer,\n    ],\n  };\n}\n\nclass DialogStackedActions extends PureComponent {\n  renderAction(action) {\n    const { options, onActionPress } = this.props;\n    const isButtonDisabled =\n      options[`${action}`] && options[`${action}`].disabled;\n\n    return (\n      <Button\n        key={action}\n        primary\n        disabled={isButtonDisabled}\n        text={action}\n        onPress={onActionPress}\n        style={{\n          container: {\n            justifyContent: 'flex-end',\n          },\n        }}\n      />\n    );\n  }\n\n  render() {\n    const { actions } = this.props;\n\n    const styles = getStyles(this.props);\n\n    return (\n      <View style={styles.stackedActionsContainer}>\n        {actions.map(action => this.renderAction(action))}\n      </View>\n    );\n  }\n}\n\nDialogStackedActions.propTypes = propTypes;\nDialogStackedActions.defaultProps = defaultProps;\n\nexport default withTheme(DialogStackedActions);\n"]},"metadata":{},"sourceType":"module"}