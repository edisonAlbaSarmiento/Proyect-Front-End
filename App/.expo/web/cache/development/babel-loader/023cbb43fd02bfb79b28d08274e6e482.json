{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Button/Button.react.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"../utils\";\nimport Icon from \"../Icon\";\nimport RippleFeedback from \"../RippleFeedback\";\nimport getPlatformElevation from \"../styles/getPlatformElevation\";\nimport withTheme from \"../styles/withTheme\";\nvar propTypes = {\n  testID: PropTypes.string,\n  disabled: PropTypes.bool,\n  raised: PropTypes.bool,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  upperCase: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconSet: PropTypes.string,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    text: Text.propTypes.style\n  }),\n  primary: PropTypes.bool,\n  accent: PropTypes.bool\n};\nvar defaultProps = {\n  testID: null,\n  icon: null,\n  onPress: null,\n  onLongPress: null,\n  primary: false,\n  accent: false,\n  disabled: false,\n  raised: false,\n  upperCase: true,\n  iconSet: null,\n  style: {}\n};\n\nfunction getStyles(props, state) {\n  var primary = props.primary,\n      accent = props.accent,\n      disabled = props.disabled,\n      raised = props.raised,\n      theme = props.theme;\n  var button = theme.button,\n      buttonFlat = theme.buttonFlat,\n      buttonRaised = theme.buttonRaised,\n      buttonDisabled = theme.buttonDisabled,\n      buttonRaisedDisabled = theme.buttonRaisedDisabled,\n      palette = theme.palette;\n  var local = {\n    container: {}\n  };\n\n  if (!disabled) {\n    if (primary && !raised) {\n      local.text = {\n        color: palette.primaryColor\n      };\n    } else if (accent && !raised) {\n      local.text = {\n        color: palette.accentColor\n      };\n    }\n\n    if (primary && raised) {\n      local.container.backgroundColor = palette.primaryColor;\n      local.text = {\n        color: palette.canvasColor\n      };\n    } else if (accent && raised) {\n      local.container.backgroundColor = palette.accentColor;\n      local.text = {\n        color: palette.canvasColor\n      };\n    }\n  }\n\n  if (raised && !disabled) {\n    local.container = _objectSpread({}, local.container, getPlatformElevation(state.elevation));\n  }\n\n  return {\n    container: [button.container, !raised && buttonFlat.container, raised && buttonRaised.container, !raised && disabled && buttonDisabled.container, raised && disabled && buttonRaisedDisabled.container, local.container, props.style.container],\n    text: [button.text, !raised && buttonFlat.text, raised && buttonRaised.text, !raised && disabled && buttonDisabled.text, raised && disabled && buttonRaisedDisabled.text, local.text, props.style.text],\n    icon: [button.icon, !raised && buttonFlat.icon, disabled && buttonDisabled.icon, raised && buttonRaised.icon, local.icon, props.style.icon]\n  };\n}\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Button).call(this, props));\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onPress = _this$props.onPress;\n\n      if (onPress) {\n        onPress(text);\n      }\n    };\n\n    _this.setElevation = function () {\n      _this.setState({\n        elevation: 4\n      });\n    };\n\n    _this.removeElevation = function () {\n      _this.setState({\n        elevation: 2\n      });\n    };\n\n    _this.renderIcon = function (styles) {\n      var _this$props2 = _this.props,\n          icon = _this$props2.icon,\n          iconSet = _this$props2.iconSet;\n      var textFlatten = StyleSheet.flatten(styles.text);\n\n      if (!icon) {\n        return null;\n      }\n\n      var result;\n\n      if (React.isValidElement(icon)) {\n        result = icon;\n      } else if (typeof icon === 'string') {\n        result = React.createElement(Icon, {\n          iconSet: iconSet,\n          name: icon,\n          color: textFlatten.color,\n          style: styles.icon,\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        });\n      }\n\n      return result;\n    };\n\n    _this.state = {\n      elevation: 2\n    };\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          text = _this$props3.text,\n          disabled = _this$props3.disabled,\n          raised = _this$props3.raised,\n          upperCase = _this$props3.upperCase,\n          onLongPress = _this$props3.onLongPress,\n          testID = _this$props3.testID;\n      var styles = getStyles(this.props, this.state);\n      var content = React.createElement(View, {\n        style: styles.container,\n        pointerEvents: \"box-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        }\n      }, this.renderIcon(styles), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        }\n      }, upperCase ? text.toUpperCase() : text));\n\n      if (disabled) {\n        return content;\n      }\n\n      return React.createElement(RippleFeedback, {\n        testID: testID,\n        onPress: !disabled ? this.onPress : null,\n        onLongPress: !disabled ? onLongPress : null,\n        onPressIn: raised ? this.setElevation : null,\n        onPressOut: raised ? this.removeElevation : null,\n        delayPressIn: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        }\n      }, content);\n    }\n  }]);\n\n  return Button;\n}(PureComponent);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default withTheme(Button);","map":{"version":3,"sources":["/Users/edisonalba/Desktop/Proyect-University/App/node_modules/react-native-material-ui/src/Button/Button.react.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","Icon","RippleFeedback","getPlatformElevation","withTheme","propTypes","testID","string","disabled","bool","raised","onPress","func","onLongPress","text","isRequired","upperCase","icon","oneOfType","element","iconSet","style","shape","container","Text","primary","accent","defaultProps","getStyles","props","state","theme","button","buttonFlat","buttonRaised","buttonDisabled","buttonRaisedDisabled","palette","local","color","primaryColor","accentColor","backgroundColor","canvasColor","elevation","Button","setElevation","setState","removeElevation","renderIcon","styles","textFlatten","StyleSheet","flatten","result","isValidElement","content","toUpperCase"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport { View, Text, StyleSheet } from 'react-native';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from '../utils';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport Icon from '../Icon';\nimport RippleFeedback from '../RippleFeedback';\n/* eslint-disable import/no-unresolved, import/extensions */\nimport getPlatformElevation from '../styles/getPlatformElevation';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport withTheme from '../styles/withTheme';\n\nconst propTypes = {\n  testID: PropTypes.string,\n  /**\n   * If true button will be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If true button will be raised\n   */\n  raised: PropTypes.bool,\n  /**\n   * Called when button is pressed. Text is passed as param\n   */\n  onPress: PropTypes.func,\n  /**\n   * Called when button is long pressed. Text is passed as param\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Text will be shown on button\n   */\n  text: PropTypes.string.isRequired,\n  /**\n   * Button text will be in uppercase letters\n   */\n  upperCase: PropTypes.bool,\n  /**\n   * If specified it'll be shown before text\n   */\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /**\n   * Name of Icon set that should be use. From react-native-vector-icons\n   */\n  iconSet: PropTypes.string,\n  /**\n   * You can override any style for this button\n   */\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n    text: Text.propTypes.style, // eslint-disable-line\n  }),\n  primary: PropTypes.bool,\n  accent: PropTypes.bool,\n};\nconst defaultProps = {\n  testID: null,\n  icon: null,\n  onPress: null,\n  onLongPress: null,\n  primary: false,\n  accent: false,\n  disabled: false,\n  raised: false,\n  upperCase: true,\n  iconSet: null,\n  style: {},\n};\n\nfunction getStyles(props, state) {\n  const { primary, accent, disabled, raised, theme } = props;\n  const {\n    button,\n    buttonFlat,\n    buttonRaised,\n    buttonDisabled,\n    buttonRaisedDisabled,\n    palette,\n  } = theme;\n\n  const local = {\n    container: {},\n  };\n\n  if (!disabled) {\n    if (primary && !raised) {\n      local.text = { color: palette.primaryColor };\n    } else if (accent && !raised) {\n      local.text = { color: palette.accentColor };\n    }\n\n    if (primary && raised) {\n      local.container.backgroundColor = palette.primaryColor;\n      local.text = { color: palette.canvasColor };\n    } else if (accent && raised) {\n      local.container.backgroundColor = palette.accentColor;\n      local.text = { color: palette.canvasColor };\n    }\n  }\n\n  if (raised && !disabled) {\n    local.container = {\n      ...local.container,\n      ...getPlatformElevation(state.elevation),\n    };\n  }\n\n  return {\n    container: [\n      button.container,\n      !raised && buttonFlat.container,\n      raised && buttonRaised.container,\n      !raised && disabled && buttonDisabled.container,\n      raised && disabled && buttonRaisedDisabled.container,\n      local.container,\n      props.style.container,\n    ],\n    text: [\n      button.text,\n      !raised && buttonFlat.text,\n      raised && buttonRaised.text,\n      !raised && disabled && buttonDisabled.text,\n      raised && disabled && buttonRaisedDisabled.text,\n      local.text,\n      props.style.text,\n    ],\n    icon: [\n      button.icon,\n      !raised && buttonFlat.icon,\n      disabled && buttonDisabled.icon,\n      raised && buttonRaised.icon,\n      local.icon,\n      props.style.icon,\n    ],\n  };\n}\n\nclass Button extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elevation: 2, // eslint-disable-line\n    };\n  }\n\n  onPress = () => {\n    const { text, onPress } = this.props;\n\n    if (onPress) {\n      onPress(text);\n    }\n  };\n\n  setElevation = () => {\n    this.setState({\n      elevation: 4, // eslint-disable-line\n    });\n  };\n\n  removeElevation = () => {\n    this.setState({\n      elevation: 2, // eslint-disable-line\n    });\n  };\n\n  renderIcon = styles => {\n    const { icon, iconSet } = this.props;\n    const textFlatten = StyleSheet.flatten(styles.text);\n\n    if (!icon) {\n      return null;\n    }\n\n    let result;\n\n    if (React.isValidElement(icon)) {\n      result = icon;\n    } else if (typeof icon === 'string') {\n      result = (\n        <Icon\n          iconSet={iconSet}\n          name={icon}\n          color={textFlatten.color}\n          style={styles.icon}\n          size={24}\n        />\n      );\n    }\n\n    return result;\n  };\n\n  render() {\n    const {\n      text,\n      disabled,\n      raised,\n      upperCase,\n      onLongPress,\n      testID,\n    } = this.props;\n\n    const styles = getStyles(this.props, this.state);\n\n    const content = (\n      <View style={styles.container} pointerEvents=\"box-only\">\n        {this.renderIcon(styles)}\n        <Text style={styles.text}>{upperCase ? text.toUpperCase() : text}</Text>\n      </View>\n    );\n\n    if (disabled) {\n      return content;\n    }\n\n    return (\n      <RippleFeedback\n        testID={testID}\n        onPress={!disabled ? this.onPress : null}\n        onLongPress={!disabled ? onLongPress : null}\n        onPressIn={raised ? this.setElevation : null}\n        onPressOut={raised ? this.removeElevation : null}\n        delayPressIn={50}\n      >\n        {content}\n      </RippleFeedback>\n    );\n  }\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default withTheme(Button);\n"]},"metadata":{},"sourceType":"module"}